
#Region "Namespace"
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Generic
Imports CrystalDecisions.CrystalReports.Engine
Imports CrystalDecisions.CrystalReports
Imports CrystalDecisions.Shared
Imports CrystalDecisions.Web
Imports CrystalDecisions.ReportSource
#End Region

Partial Class TransportModule_AssignAirportrepSearch
    Inherits System.Web.UI.Page

#Region "Global Declaration"
    Dim objUtils As New clsUtils
    Dim strSqlQry As String
    Dim mySqlCmd As SqlCommand
    Dim mySqlReader As SqlDataReader
    Dim mySqlConn As SqlConnection
    Dim sqlTrans As SqlTransaction
    Dim objDate As New clsDateTime
    Dim SqlConn As SqlConnection
    Dim myCommand As SqlCommand
    Dim myDataAdapter As SqlDataAdapter
    Dim index As String
    Dim lblid As Label
    Dim repDeocument As New ReportDocument
    Dim rptcompanyname As String
    Dim rptreportname As String
    Dim objUser As New clsUser
    Dim strSelectionFormula As String = ""
    Dim strReportTitle As String = ""
    Dim repfilter As String = ""
    Dim mydsnew As New DataSet
#End Region

#Region "Enum GridCol"
    Enum GridCol
        SectorCodeTCol = 0
        SectorCode = 1
        SectorName = 2
        CountryCode = 3
        CountryName = 4
        CityCode = 5
        CityName = 6
        Active = 7
        DateCreated = 8
        UserCreated = 9
        DateModified = 13
        UserModified = 14
        Assign = 11
        View = 30
        RemoveAssign = 12

    End Enum
#End Region
#Region "Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load"

    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init

    End Sub

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        If Page.IsPostBack = False Then
            Try

                Dim AppId As HiddenField = CType(Master.FindControl("hdnAppId"), HiddenField)
                Dim AppName As HiddenField = CType(Master.FindControl("hdnAppName"), HiddenField)
                Dim strappid As String = ""
                Dim strappname As String = ""
                Dim pagedec As String = ""

                ddlTransferType.Enabled = False
                txtremarksnew.Enabled = True

                If AppId Is Nothing = False Then
                    strappid = AppId.Value
                End If
                If AppName Is Nothing = False Then
                    strappname = AppName.Value
                End If

                If Request.QueryString("menudesc") <> "" Then
                    pagedec = CType(Request.QueryString("menudesc"), String)
                End If
                If CType(Session("GlobalUserName"), String) = "" Then
                    Response.Redirect("~/Login.aspx", False)
                    Exit Sub

                Else
                    objUser.CheckUserRight(Session("dbconnectionName"), CType(Session("GlobalUserName"), String), CType(Session("Userpwd"), String), _
                                                       CType(strappname, String), "TransportModule\AssignAirportrepSearch.aspx", btnAddNew, btnExport, _
                                                     btndriverreport, gv_SearchResult, , , , , , , , , , GridCol.Assign, GridCol.RemoveAssign)

                End If

                txtconnection.Value = Session("dbconnectionName")

                btnAddNew.Visible = False
                btnExportToExcel.Visible = False
                btnPrint.Visible = False
                btnExit.Visible = False
                Dim default_group As String
                default_group = objUtils.GetDBFieldFromStringnew(Session("dbconnectionName"), "reservation_parameters", "option_selected", "param_id", CType("458", String))
                fromdate.Text = Format(CType(objDate.GetSystemDateOnly(Session("dbconnectionName")), Date), "dd/MM/yyyy")
                txtodate.Text = Format(CType(objDate.GetSystemDateOnly(Session("dbconnectionName")), Date), "dd/MM/yyyy")
                '03082014vij
                'chkDate.Checked = True
                txtTransFrmDate.Text = Format(CType(objDate.GetSystemDateOnly(Session("dbconnectionName")), Date), "dd/MM/yyyy")
                txtTransferTodate.Text = Format(CType(objDate.GetSystemDateOnly(Session("dbConnectionName")), Date), "dd/MM/yyyy")
                chkTransferDate.Checked = True
                txtTransFrmDate.Enabled = True
                txtTransferTodate.Enabled = True
                ImgPBtnTransFrmDt.Enabled = True
                ImgPBtnTransToDt.Enabled = True
                gv_SearchResult.Visible = False
                txtRemarks.Text = "Arrival"
                Dim GroupId As Integer
                GroupId = objUser.GetGroupId(Session("dbconnectionName"), CType(Session("GlobalUserName"), String), CType(Session("Userpwd"), String))
                If GroupId = 2 Then
                    btnExport.Visible = False
                    btndriverreport.Visible = False
                    btnDrOperation.Visible = False
                    btnTransport.Visible = False
                End If
                'divassigntransfer.Style{"display"}=none


                divassigntransfer.Style("display") = "none"
                divassigntransfer.Style("visibility") = "hidden"
                btnCancel.Attributes.Add("onclick", "return hidediv()")
                objUtils.FillDropDownListHTMLNEW(Session("dbConnectionName"), ddlHotelName, "partyname", "partycode", "select partyname,partycode from partymast where active=1", True)
                objUtils.FillDropDownListHTMLNEW(Session("dbConnectionName"), ddlAgent, "agentname", "agentcode", "select agentname,agentcode from agentmast where active=1", True)
                objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlFlightName, "flightcode", "flightcode", "select flightcode,flightcode from flightmast where active=1", True)
                objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlDriverName, "repname", "repcode", "select repname,repcode from Airportrep where active=1  order by repname", True)
                'objUtils.FillDropDownListHTMLNEW(Session("dbConnectionName"), ddlvehiclename, "vehiclename", "vehiclecode", "select vehiclename,vehiclecode from vw_usedfortransfers where active=1", True)
                objUtils.FillDropDownListHTMLNEW(Session("dbConnectionName"), ddlvehiclename, "vehiclename", "vehiclecode", "select vehiclename,vehiclecode from vehiclemaster where active=1", True)
                objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlSupplier, "partyname", "partycode", "select partyname,partycode from partymast where  active=1 and sptypecode<>'" & default_group & "' order by partyname", True)
                fillorderby()
                fillstatus()
                filltransfer()
                FillGrid()





            Catch ex As Exception
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
                objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
            End Try

        Else




            'postbackhandling
            If (hdnTransferType.Value = "0") Then
                txtRemarks.Text = "Arrival"
            ElseIf (hdnTransferType.Value = "1") Then
                txtRemarks.Text = "Departure"
            ElseIf (hdnTransferType.Value = "2") Then
                txtRemarks.Text = "Shifting"
            ElseIf (hdnTransferType.Value = "3") Then
                txtRemarks.Text = "Arrival/Departure/Shifting"
            Else
                txtRemarks.Text = "Arrival"
            End If

            If (hdnTransferMode.Value = "0") Then
                ddlDriverName.Disabled = False
                ddlvehiclename.Disabled = False

                ddlSupplier.Value = "[Select]"
                txtSupplierCurr.Text = ""
                txtCostPrice.Text = ""
                chkSupplier.Text = ""

                ddlSupplier.Disabled = True
                txtSupplierCurr.Enabled = False
                txtCostPrice.Enabled = False
                chkSupplier.Enabled = False
                ddlTransferMode.SelectedIndex = 0



            ElseIf (hdnTransferMode.Value = "1") Then
                ''10092014
                ''ddlDriverName.Value = "[Select]"
                ''ddlvehiclename.Value = "[Select]"
                txtTelephone.Text = ""

                ''10092014
                'ddlDriverName.Disabled = True
                'ddlvehiclename.Disabled = True
                ddlTransferMode.SelectedIndex = 1
                ddlSupplier.Disabled = False
                txtSupplierCurr.Enabled = True
                txtCostPrice.Enabled = True
                chkSupplier.Enabled = True

            Else
                ''ddlDriverName.Value = "[Select]"
                ''ddlvehiclename.Value = "[Select]"
                txtTelephone.Text = ""

                ''10092014
                'ddlDriverName.Disabled = True
                ' ddlvehiclename.Disabled = True
                ddlTransferMode.SelectedIndex = 2
                ddlSupplier.Disabled = True
                txtSupplierCurr.Enabled = True
                txtCostPrice.Enabled = True
                chkSupplier.Enabled = True

            End If










            'If hdnstatus.Value <> "" Then
            'ddlstatus.SelectedIndex = hdnstatus.Value
            'End If


            If hdnsuppliercode.Value <> "[Select]" And hdnsuppliercode.Value <> "" Then
                ddlSupplier.Value = hdnsuppliercode.Value
                If hdnsuppliercurrency.Value <> "" Then
                    txtSupplierCurr.Text = hdnsuppliercurrency.Value
                End If

                'If hdncomsupplier.Value <> "" Then
                '    If hdncomsupplier.Value = 1 Then

                '        chkSupplier.Checked = True
                '    End If

                'End If

            End If

            If hdndrivercode.Value <> "[Select]" And hdndrivercode.Value <> "" Then
                ''ddlvehiclename.Value = hdndrivercode.Value


            End If

            If hdndriverphoneno.Value <> "" Then
                txtTelephone.Text = hdndriverphoneno.Value
            End If

            If hdnvehiclecode.Value <> "" Then
                objUtils.FillDropDownListHTMLNEW(Session("dbConnectionName"), ddlvehiclename, "vehiclename", "vehiclecode", "select vehiclename,vehiclecode from vehiclemaster where active=1 and vehiclemaster.vehiclecode='" & hdnvehiclecode.Value & "'", True)
                ddlvehiclename.Value = hdnvehiclecode.Value
            End If


        End If

        Dim typ As Type
        typ = GetType(DropDownList)

        If (Page.ClientScript.IsClientScriptIncludeRegistered(typ, "TADDScript.js")) = False Then
            Page.ClientScript.RegisterClientScriptInclude(typ, "TADDScript.js", "TADDScript.js")
            ddlTransferMode.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
            ddlTransferType.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
            ddlDriverName.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
            ddlSupplier.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
            ddlAgent.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
            ddlFlightName.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
            ddlstatus.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
            ddlvehiclename.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
            ddlHotelName.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")



        End If



    End Sub

#End Region

    Private Sub fillorderby()
        ddlTransferType.Items.Clear()
        ddlTransferType.Items.Add("Arrival")
        ddlTransferType.Items.Add("Departure")
        ddlTransferType.Items.Add("Shifting")
        ddlTransferType.Items.Add("Alll")

        ddlTransferType.SelectedIndex = 0
    End Sub

    Private Sub fillstatus()
        ddlstatus.Items.Clear()
        ddlstatus.Items.Add("Confirm")
        ddlstatus.Items.Add("Cancel")
        ddlstatus.Items.Add("On Request")
        ddlstatus.SelectedIndex = 0
    End Sub
    Private Sub filltransfer()
        ddlTransferMode.Items.Clear()
        ddlTransferMode.Items.Add("Own Transport")
        ddlTransferMode.Items.Add("From Supplier")
        ddlTransferMode.Items.Add("Hotel Transfer")
        ddlTransferMode.SelectedIndex = 1

    End Sub

    Protected Sub chkDate_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkDate.CheckedChanged
        If chkDate.Checked = True Then
            fromdate.Enabled = True
            txtodate.Enabled = True
        Else
            fromdate.Enabled = False
            txtodate.Enabled = False
            ImgPBtnFrmDt.Enabled = False
            ImgPBtnToDt.Enabled = False

        End If
    End Sub



    Protected Sub chkTransferDate_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkTransferDate.CheckedChanged
        If chkTransferDate.Checked = True Then
            txtTransFrmDate.Enabled = True
            txtTransferTodate.Enabled = True
            ImgPBtnTransFrmDt.Enabled = True
            ImgPBtnTransToDt.Enabled = True
        Else

            txtTransFrmDate.Enabled = False
            txtTransferTodate.Enabled = False
            ImgPBtnTransFrmDt.Enabled = False
            ImgPBtnTransToDt.Enabled = False


        End If
    End Sub

    Protected Sub btnResult_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnResult.Click
        divassigntransfer.Style("display") = "none"
        divassigntransfer.Style("visibility") = "hidden"
        FillGrid()




    End Sub

#Region "Private Sub FillGrid()"
    Private Sub FillGrid()
        Dim myDS As New DataSet
        Dim chkselect As CheckBox
        Dim lblsup As Label

        Dim a As Integer





        gv_SearchResult.Visible = True


        If gv_SearchResult.PageIndex < 0 Then
            gv_SearchResult.PageIndex = 0
        End If
        strSqlQry = ""
        Try




            Dim parms As New List(Of SqlParameter)
            Dim parm(13) As SqlParameter
            parm(13) = New SqlParameter
            parm(0) = New SqlParameter("@transfertype", ddlTransferType.SelectedIndex)
            parm(1) = New SqlParameter("@searchbyrequestdate", IIf(chkDate.Checked = True, 1, 0))
            parm(2) = New SqlParameter("@fromrequestdate", Format(CType((fromdate.Text), Date), "yyyy/MM/dd"))
            parm(3) = New SqlParameter("@torequestdate", Format(CType(txtodate.Text, Date), "yyyy/MM/dd"))
            parm(4) = New SqlParameter("@searchbytransferdate", IIf(chkTransferDate.Checked = True, 1, 0))
            parm(5) = New SqlParameter("@fromtransferdate", Format(CType((txtTransFrmDate.Text), Date), "yyyy/MM/dd"))
            parm(6) = New SqlParameter("@totransferdate", Format(CType((txtTransferTodate.Text), Date), "yyyy/MM/dd"))
            parm(7) = New SqlParameter("@requestid", CType(txttransferId.Text, String))
            parm(8) = New SqlParameter("@hotelcode", IIf(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value <> "[Select]", CType(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value, String), ""))
            parm(9) = New SqlParameter("@agentcode", IIf(ddlAgent.Items(ddlAgent.SelectedIndex).Value <> "[Select]", CType(ddlAgent.Items(ddlAgent.SelectedIndex).Value, String), ""))
            parm(10) = New SqlParameter("@flightcode", IIf(ddlFlightName.Items(ddlFlightName.SelectedIndex).Text <> "[Select]", CType(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value, String), ""))
            parm(11) = New SqlParameter("@guestname", CType(txtGuestname.Text.Trim, String))
            parm(12) = New SqlParameter("@clientref", CType(txtClientRef.Text.Trim, String))


            parms.Add(parm(0))
            parms.Add(parm(1))
            parms.Add(parm(2))
            parms.Add(parm(3))
            parms.Add(parm(4))
            parms.Add(parm(5))
            parms.Add(parm(6))
            parms.Add(parm(7))
            parms.Add(parm(8))
            parms.Add(parm(9))
            parms.Add(parm(10))
            parms.Add(parm(11))
            parms.Add(parm(12))


            Dim ds As DataSet = objUtils.ExecuteQuerynew(Session("dbconnectionName"), "sp_get_transfers_assign_airportrep", parms)
            If ds.Tables.Count > 0 Then

                If ds.Tables(0).Rows.Count > 0 Then
                    gv_SearchResult.DataSource = ds.Tables(0)
                    gv_SearchResult.DataBind()
                    gv_SearchResult.Visible = True
                    hdngrdRows.Value = ds.Tables(0).Rows.Count
                    FillMYDS()
                Else
                    gv_SearchResult.Visible = False
                End If
            End If


            For Each gvrow In gv_SearchResult.Rows

                chkselect = gvrow.findcontrol("chkSelect")
                lblsup = gvrow.findcontrol("lblcomplementsup")
                If lblsup.Text.Trim = "0" Then
                    chkselect.Checked = False

                Else
                    chkselect.Checked = True
                End If
                chkselect.Enabled = False
            Next

            For i = 0 To Val(gv_SearchResult.Rows.Count) - 1
                gv_SearchResult.Rows(i).Style.Add("height", "100px")

            Next







        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        Finally
            'clsDBConnect.dbAdapterClose(myDataAdapter)                       'Close adapter
            'clsDBConnect.dbConnectionClose(SqlConn)                          'Close connection
        End Try

    End Sub
    Private Sub FillMYDS()
        Dim myDS As New DataSet
        Dim chkselect As CheckBox
        Dim lblsup As Label

        Dim a As Integer



        gv_SearchResult.Visible = True


        If gv_SearchResult.PageIndex < 0 Then
            gv_SearchResult.PageIndex = 0
        End If
        strSqlQry = ""
        Try




            Dim parms As New List(Of SqlParameter)
            Dim parm(13) As SqlParameter
            parm(13) = New SqlParameter
            parm(0) = New SqlParameter("@transfertype", ddlTransferType.SelectedIndex)
            parm(1) = New SqlParameter("@searchbyrequestdate", IIf(chkDate.Checked = True, 1, 0))
            parm(2) = New SqlParameter("@fromrequestdate", Format(CType((fromdate.Text), Date), "yyyy/MM/dd"))
            parm(3) = New SqlParameter("@torequestdate", Format(CType(txtodate.Text, Date), "yyyy/MM/dd"))
            parm(4) = New SqlParameter("@searchbytransferdate", IIf(chkTransferDate.Checked = True, 1, 0))
            parm(5) = New SqlParameter("@fromtransferdate", Format(CType((txtTransFrmDate.Text), Date), "yyyy/MM/dd"))
            parm(6) = New SqlParameter("@totransferdate", Format(CType((txtTransferTodate.Text), Date), "yyyy/MM/dd"))
            parm(7) = New SqlParameter("@requestid", CType(txttransferId.Text, String))
            parm(8) = New SqlParameter("@hotelcode", IIf(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value <> "[Select]", CType(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value, String), ""))
            parm(9) = New SqlParameter("@agentcode", IIf(ddlAgent.Items(ddlAgent.SelectedIndex).Value <> "[Select]", CType(ddlAgent.Items(ddlAgent.SelectedIndex).Value, String), ""))
            parm(10) = New SqlParameter("@flightcode", IIf(ddlFlightName.Items(ddlFlightName.SelectedIndex).Text <> "[Select]", CType(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value, String), ""))
            parm(11) = New SqlParameter("@guestname", CType(txtGuestname.Text.Trim, String))
            parm(12) = New SqlParameter("@clientref", CType(txtClientRef.Text.Trim, String))


            parms.Add(parm(0))
            parms.Add(parm(1))
            parms.Add(parm(2))
            parms.Add(parm(3))
            parms.Add(parm(4))
            parms.Add(parm(5))
            parms.Add(parm(6))
            parms.Add(parm(7))
            parms.Add(parm(8))
            parms.Add(parm(9))
            parms.Add(parm(10))
            parms.Add(parm(11))
            parms.Add(parm(12))


            Dim ds As DataSet = objUtils.ExecuteQuerynew(Session("dbconnectionName"), "sp_get_transfers_assign_full", parms)
            If ds.Tables.Count > 0 Then

                If ds.Tables(0).Rows.Count > 0 Then
                    Session("mydsnew") = ds
                End If
            End If



        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        Finally
            'clsDBConnect.dbAdapterClose(myDataAdapter)                       'Close adapter
            'clsDBConnect.dbConnectionClose(SqlConn)                          'Close connection
        End Try

    End Sub

    Private Sub excelexport()
        Dim myDS As New DataSet
        Dim i As Integer


        Try




            Dim parms As New List(Of SqlParameter)
            Dim parm(13) As SqlParameter
            parm(13) = New SqlParameter
            parm(0) = New SqlParameter("@transfertype", ddlTransferType.SelectedIndex)
            parm(1) = New SqlParameter("@searchbyrequestdate", IIf(chkDate.Checked = True, 1, 0))
            parm(2) = New SqlParameter("@fromrequestdate", Format(CType((fromdate.Text), Date), "yyyy/MM/dd"))
            parm(3) = New SqlParameter("@torequestdate", Format(CType(txtodate.Text, Date), "yyyy/MM/dd"))
            parm(4) = New SqlParameter("@searchbytransferdate", IIf(chkTransferDate.Checked = True, 1, 0))
            parm(5) = New SqlParameter("@fromtransferdate", Format(CType((txtTransFrmDate.Text), Date), "yyyy/MM/dd"))
            parm(6) = New SqlParameter("@totransferdate", Format(CType((txtTransferTodate.Text), Date), "yyyy/MM/dd"))
            parm(7) = New SqlParameter("@requestid", CType(txttransferId.Text, String))
            parm(8) = New SqlParameter("@hotelcode", IIf(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value <> "[Select]", CType(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value, String), ""))
            parm(9) = New SqlParameter("@agentcode", IIf(ddlAgent.Items(ddlAgent.SelectedIndex).Value <> "[Select]", CType(ddlAgent.Items(ddlAgent.SelectedIndex).Value, String), ""))
            parm(10) = New SqlParameter("@flightcode", IIf(ddlFlightName.Items(ddlFlightName.SelectedIndex).Text <> "[Select]", CType(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value, String), ""))
            parm(11) = New SqlParameter("@guestname", CType(txtGuestname.Text.Trim, String))
            parm(12) = New SqlParameter("@clientref", CType(txtClientRef.Text.Trim, String))

            For i = 0 To 12
                parms.Add(parm(i))
            Next

            Dim ds As DataSet = objUtils.ExecuteQuerynew(Session("dbconnectionName"), "sp_get_transfers_assign_excel_rep", parms)

            Session("excelData") = ds
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "window.open('excelopen.aspx?pagename=airportrep','excel','width=300,height=200 , status=yes,toolbar=no,menubar=no,resizable=no,scrollbars=no');", True)


        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        Finally
            'clsDBConnect.dbAdapterClose(myDataAdapter)                       'Close adapter
            'clsDBConnect.dbConnectionClose(SqlConn)                          'Close connection
        End Try

    End Sub

#End Region

#Region "  Private Function BuildCondition() As String"


    Private Function BuildCondition() As String
        Dim strWhereCond As String
        'If validate_check() = False Then


        '    Exit Function
        'End If
        strWhereCond = ""
        If txttransferId.Text <> "" Then
            If Trim(strWhereCond) = "" Then

                strWhereCond = "upper(t.requestid) ='" & Trim(txttransferId.Text.Trim) & "'"
            Else
                strWhereCond = strWhereCond & "AND upper(t.requestid)='" & Trim(txttransferId.Text.Trim.ToUpper) & "'"
            End If
        End If

        If txtClientRef.Text.Trim <> "" Then
            If Trim(strWhereCond) = "" Then

                strWhereCond = " upper(t.agentref) LIKE '%" & Trim(txtClientRef.Text.Trim.ToUpper) & "%'"
            Else
                strWhereCond = strWhereCond & " AND upper(t.agentref) LIKE '%" & Trim(txtClientRef.Text.Trim.ToUpper) & "%'"
            End If
        End If

        If chkDate.Checked = True Then

            If fromdate.Text <> "" And txtodate.Text <> "" Then
                If Trim(strWhereCond) = "" Then
                    strWhereCond = "( (convert(varchar(10),t.requestdate,111) between convert(varchar(10), '" & Format(CType(fromdate.Text, Date), "yyyy/MM/dd") & "',111) " _
                    & "  and  convert(varchar(10), '" & Format(CType(txtodate.Text, Date), "yyyy/MM/dd") & "',111) ) " _
                    & " or (convert(varchar(10),t.requestdate,111) < convert(varchar(10), '" & Format(CType(fromdate.Text, Date), "yyyy/MM/dd") & "',111) " _
                    & "  and convert(varchar(10),t.requestdate,111) > convert(varchar(10), '" & Format(CType(txtodate.Text, Date), "yyyy/MM/dd") & "',111)) )"
                Else
                    strWhereCond = strWhereCond & " and ( (convert(varchar(10),t.requestdate,111) between convert(varchar(10), '" & Format(CType(fromdate.Text, Date), "yyyy/MM/dd") & "',111) " _
                    & "  and  convert(varchar(10), '" & Format(CType(txtodate.Text, Date), "yyyy/MM/dd") & "',111) ) " _
                    & " or (convert(varchar(10),t.requestdate,111) < convert(varchar(10), '" & Format(CType(fromdate.Text, Date), "yyyy/MM/dd") & "',111) " _
                    & "  and convert(varchar(10),t.requestdate,111) > convert(varchar(10), '" & Format(CType(txtodate.Text, Date), "yyyy/MM/dd") & "',111)) )"

                End If
            End If
        End If

        If chkTransferDate.Checked = True Then

            If txtTransFrmDate.Text <> "" And txtTransferTodate.Text <> "" Then
                If Trim(strWhereCond) = "" Then
                    strWhereCond = "( (convert(varchar(10),d.transferdate,111) between convert(varchar(10), '" & Format(CType(txtTransFrmDate.Text, Date), "yyyy/MM/dd") & "',111) " _
                    & "  and  convert(varchar(10), '" & Format(CType(txtTransferTodate.Text, Date), "yyyy/MM/dd") & "',111) ) " _
                    & " or (convert(varchar(10),d.transferdate,111) < convert(varchar(10), '" & Format(CType(txtTransFrmDate.Text, Date), "yyyy/MM/dd") & "',111) " _
                    & "  and convert(varchar(10),d.transferdate,111) > convert(varchar(10), '" & Format(CType(txtTransferTodate.Text, Date), "yyyy/MM/dd") & "',111)) )"
                Else
                    strWhereCond = strWhereCond & " and ( (convert(varchar(10),t.transferdate,111) between convert(varchar(10), '" & Format(CType(txtTransFrmDate.Text, Date), "yyyy/MM/dd") & "',111) " _
                    & "  and  convert(varchar(10), '" & Format(CType(txtTransferTodate.Text, Date), "yyyy/MM/dd") & "',111) ) " _
                    & " or (convert(varchar(10),d.transferdate,111) < convert(varchar(10), '" & Format(CType(txtTransFrmDate.Text, Date), "yyyy/MM/dd") & "',111) " _
                    & "  and convert(varchar(10),d.transferdate,111) > convert(varchar(10), '" & Format(CType(txtTransferTodate.Text, Date), "yyyy/MM/dd") & "',111)) )"

                End If
            End If

        End If

        If txtGuestname.Text.Trim <> "" Then
            If Trim(strWhereCond) = "" Then

                strWhereCond = " upper(t.guestname) LIKE '%" & (txtGuestname.Text.ToUpper) & "%'"
            Else
                strWhereCond = strWhereCond & " AND upper(t.guestname) LIKE '%" & (txtGuestname.Text.ToUpper) & "%'"
            End If
        End If






        If ddlTransferType.SelectedIndex <> 3 Then
            If Trim(strWhereCond) = "" Then
                strWhereCond = "upper(d.transfertype) = '" & Trim(ddlTransferType.SelectedIndex) & "'"

            Else
                strWhereCond = strWhereCond & " AND upper(d.transfertype) = '" & Trim(ddlTransferType.SelectedIndex) & "'"


            End If
        End If

        If Me.ddlAgent.Value <> "[Select]" Then
            If Trim(strWhereCond) = "" Then
                strWhereCond = "upper(t.agentcode) = '" & Trim(ddlAgent.Items(ddlAgent.SelectedIndex).Value.Trim.ToUpper) & "'"
            Else
                strWhereCond = strWhereCond & " AND upper(t.agentcode) = '" & Trim(ddlAgent.Items(ddlAgent.SelectedIndex).Value.Trim.ToUpper) & "'"
            End If
        End If


        If Me.ddlHotelName.Value <> "[Select]" Then
            If Trim(strWhereCond) = "" Then
                strWhereCond = " upper(d.hotelcode)) = '" & Trim(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value.Trim.ToUpper) & "'"
            Else
                strWhereCond = strWhereCond & " AND upper(d.hotelcode) = '" & Trim(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value.Trim.ToUpper) & "'"
            End If
        End If
        If Me.ddlFlightName.Value <> "[Select]" Then
            If Trim(strWhereCond) = "" Then
                strWhereCond = " upper(d.flightcode)) = '" & Trim(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value.Trim.ToUpper) & "'"
            Else
                strWhereCond = strWhereCond & " AND upper(d.flightcode) = '" & Trim(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value.Trim.ToUpper) & "'"
            End If
        End If
        BuildCondition = strWhereCond
    End Function
#End Region

#Region "Protected Sub gv_SearchResult_PageIndexChanging(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewPageEventArgs) Handles gv_SearchResult.PageIndexChanging"
    Protected Sub gv_SearchResult_PageIndexChanging(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewPageEventArgs) Handles gv_SearchResult.PageIndexChanging
        gv_SearchResult.PageIndex = e.NewPageIndex
        FillGrid()
        divassigntransfer.Style("display") = "none"
        divassigntransfer.Style("visibility") = "hidden"


    End Sub

#End Region



    Protected Sub gv_SearchResult_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles gv_SearchResult.RowCommand

        Try

            If e.CommandName = "Page" Then Exit Sub
            If e.CommandName = "Sort" Then Exit Sub
            Dim lbltlineno As Label
            Dim myds As New DataSet

            Dim lblcheckbox As Label
            Dim lblstartingpoint As Label
            Dim lblendingpoint As Label
            Dim cartype As Label
            lblid = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblCode")
            index = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).Cells(2).Text
            hdnvlineno.Value = CType(lblid.Text, String)
            hdntransaction.Value = index
            lblcheckbox = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblcomplementsup")
            lblstartingpoint = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblstartingpoint")
            lblendingpoint = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblendingpoint")
            Dim drivercode As Label = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lbldrivercode")
            Dim pickupdate As Label = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblpickupdate")
            Dim vehiclecode As Label
            Dim suppliercode As Label

            Dim pickuptime As Label = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblpickuptime")
            suppliercode = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblsuppliercode")
            hdnpickupdate.Value = pickupdate.Text.Trim
            hdnpickuptime.Value = pickuptime.Text.Trim
            'vij
            lbltlineno = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lbltlineno")
            hdntlineno.Value = CType(lbltlineno.Text, String)
            hdngrdlineno.Value = Val(e.CommandArgument.ToString) + 1
            Dim flag As Boolean
            flag = False

            myds = Session("mydsnew")

            If e.CommandName = "Assign" Then

                '02092014
                txtremarksnew.Text = myds.Tables(0).Rows(CType(e.CommandArgument.ToString, String))("remarks")
                'document.getElementById('divassigntransfer').focus();
                Dim parms As New List(Of SqlParameter)
                Dim parm(3) As SqlParameter
                parm(3) = New SqlParameter
                parm(0) = New SqlParameter("@vlineno", lblid.Text.Trim)
                parm(1) = New SqlParameter("@requestid", index)
                parm(2) = New SqlParameter("@tlineno", index)

                parms.Add(parm(0))
                parms.Add(parm(1))
                parms.Add(parm(2))

                Dim ds As DataSet = objUtils.ExecuteQuerynew(Session("dbconnectionName"), "sp_getvalue_rep", parms)
                If ds.Tables(0).Rows.Count > 0 Then
                    Dim status As Label = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblstatus")
                    Dim transfermode As Label = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lbltransfermode")



                    vehiclecode = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblvehiclecode")



                    Dim suppliercurr As Label = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblsuppliercurrcode")


                    Dim costprice As Label = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblcostprice")


                    cartype = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblcartype")

                    If (status.Text.Trim <> ds.Tables(0).Rows(0)(0).ToString Or transfermode.Text.Trim <> ds.Tables(0).Rows(0)(1).ToString Or drivercode.Text.Trim <> ds.Tables(0).Rows(0)(2).ToString Or vehiclecode.Text.Trim <> ds.Tables(0).Rows(0)(3).ToString Or pickupdate.Text.Trim <> ds.Tables(0).Rows(0)(5).ToString Or pickuptime.Text.Trim <> ds.Tables(0).Rows(0)(6).ToString Or suppliercode.Text.Trim <> ds.Tables(0).Rows(0)(7).ToString Or suppliercurr.Text.Trim <> ds.Tables(0).Rows(0)(8).ToString Or costprice.Text.Trim <> ds.Tables(0).Rows(0)(9).ToString Or lblcheckbox.Text.Trim <> ds.Tables(0).Rows(0)(10).ToString) Then
                        'If (gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).Cells(16).Text = ds.Tables(0).Rows(0)(2).ToString) Then
                        flag = True
                    End If

                    ''ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "javascript:filldriverondriverclick();", True)
                End If
                Dim HeightInt As Integer
                Dim cellcnt As Integer
                cellcnt = e.CommandArgument.ToString + 1
                'For i = 0 To Val(gv_SearchResult.Rows.Count) - 1
                '    gv_SearchResult.Rows(i).Style.Add("height", "100px")
                '    HeightInt += 100
                'Next
                Dim top As Integer
                'top = 500 + HeightInt
                top = (cellcnt * 98) + 450
                If flag = True Then
                    ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Assigned values have been changed,refreshing record');", True)
                    divassigntransfer.Style("display") = "none"
                    divassigntransfer.Style("visibility") = "hidden"
                    Exit Sub
                Else
                    divassigntransfer.Style("display") = "block"

                    divassigntransfer.Style("visibility") = "visibile"
                    divassigntransfer.Style("position") = "absolute"
                    divassigntransfer.Style("top") = top & "px" '"340px"
                    divassigntransfer.Style("right") = "200px"
                    divassigntransfer.Style("z-index") = "500px"


                    showrecord(index)
                    showvalue(index, lblid.Text)

                    'If vehiclecode.Text.Trim <> "" Or suppliercode.Text.Trim <> "" Then
                    '    ' showassignedvalues(index, lblid.Text)
                    'End If

                    'costpricecalculation(cartype.Text.Trim, lblstartingpoint.Text.Trim, lblendingpoint.Text.Trim)
                End If



                'ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
            End If

            If e.CommandName = "Remove Assign" Then

                Dim ds As DataSet = objUtils.ExecuteQuerySqlnew(Session("dbconnectionName"), "select * from transfer_booking_subdetail   where requestid ='" & (hdntransaction.Value) & "' and vlineno ='" & (hdnvlineno.Value) & "'  and tlineno='" & hdntlineno.Value & "'  and  (isnull(drivercode,'')<>'' or isnull(suppliercode,'')<>'')")

                If ds.Tables.Count = 0 Then
                    'Or str = Nothing Then
                    ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Not Assigned');", True)
                    Exit Sub
                Else
                    If ds.Tables(0).Rows.Count = 0 Then
                        ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Not Assigned');", True)
                        Exit Sub
                    Else
                        ''Dim StrConfirm As String = "ConfirmOpen('" + CType(lblid.Text.Trim, String) + "');"
                        ''ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", StrConfirm, True)
                        validateWithgConfirmBox()
                    End If
                End If





            End If







        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("TransfersRequestSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        End Try

    End Sub


    Private Sub showrecord(ByVal refcode As String)

        Try
            SqlConn = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))           'connection open
            'myCommand = New SqlCommand("select * from transfers_booking where requestid='" & refcode & "'", SqlConn)
            '22072014vij
            myCommand = New SqlCommand("select * from transfers_booking_vw where requestid='" & refcode & "'", SqlConn)

            mySqlReader = myCommand.ExecuteReader(CommandBehavior.CloseConnection)
            If mySqlReader.HasRows Then
                If mySqlReader.Read() = True Then
                    If IsDBNull(mySqlReader("requestid")) = False Then
                        Me.txtTransferIDvalue.Text = CType(mySqlReader("requestid"), String)
                    Else
                        Me.txtTransferIDvalue.Text = ""
                    End If
                    If IsDBNull(mySqlReader("transferdate")) = False Then
                        txtTransferDatevalue.Text = Format(CType((mySqlReader("transferdate")), Date), "dd/MM/yyyy")
                    Else
                        txtTransferDatevalue.Text = Format(CType(objDate.GetSystemDateOnly(Session("dbconnectionName")), Date), "dd/MM/yyyy")
                    End If
                    If IsDBNull(mySqlReader("transfertype")) = False Then

                        If (mySqlReader("transfertype") = 0) Then
                            txtTransferTypevalue.Text = "Arrival"
                            txtShiftHotelNameValue.Text = ""
                        ElseIf (mySqlReader("transfertype") = 1) Then
                            txtTransferTypevalue.Text = "Departure"
                            txtShiftHotelNameValue.Text = ""

                        Else
                            txtTransferTypevalue.Text = "Shifting"
                            If IsDBNull(mySqlReader("shifthotelcode")) = False Then
                                txtShiftHotelNameValue.Text = objUtils.GetDBFieldFromStringnew(Session("dbconnectionName"), "partymast", "partyname", "partycode", CType(mySqlReader("shifthotelcode"), String))
                                txtAirportvalue.Text = ""
                            End If

                        End If
                    Else
                        txtTransferTypevalue.Text = ""
                    End If

                    If IsDBNull(mySqlReader("agentcode")) = False Then
                        Me.txtagentName.Text = objUtils.GetDBFieldFromStringnew(Session("dbconnectionName"), "agentmast", "agentname", "agentcode", CType(mySqlReader("agentcode"), String))
                    Else
                        Me.txtagentName.Text = ""
                    End If

                    If IsDBNull(mySqlReader("agentref")) = False Then

                        Me.txtclientRefvalue.Text = CType(mySqlReader("agentref"), String)
                    Else
                        Me.txtclientRefvalue.Text = ""
                    End If

                    If IsDBNull(mySqlReader("hotelcode")) = False Then
                        Me.txtHotelNameValue.Text = objUtils.GetDBFieldFromStringnew(Session("dbconnectionName"), "partymast", "partyname", "partycode", CType(mySqlReader("hotelcode"), String))
                    Else
                        Me.txtHotelNameValue.Text = ""
                    End If


                    If IsDBNull(mySqlReader("flightcode")) = False Then
                        Me.txtflightnovalue.Text = CType(mySqlReader("flightcode"), String)
                    Else
                        Me.txtflightnovalue.Text = ""
                    End If
                    If IsDBNull(mySqlReader("transfertype")) = False Then
                        If mySqlReader("transfertype") = "0" Then

                            If IsDBNull(mySqlReader("startingpoint")) = False Then
                                txtAirportvalue.Text = objUtils.GetDBFieldFromStringnew(Session("dbconnectionName"), "view_airportsectormast", "airportbordername", "airportbordercode", CType(mySqlReader("startingpoint"), String))
                            End If
                        ElseIf (mySqlReader("transfertype") = 1) Then
                            If IsDBNull(mySqlReader("endingpoint")) = False Then
                                txtAirportvalue.Text = objUtils.GetDBFieldFromStringnew(Session("dbconnectionName"), "view_airportsectormast", "airportbordername", "airportbordercode", CType(mySqlReader("endingpoint"), String))
                            End If

                        End If
                    End If
                    If IsDBNull(mySqlReader("flighttime")) = False Then
                        txtTimeValue.Text = mySqlReader("flighttime")
                    Else
                        txtTimeValue.Text = ""
                    End If

                    If IsDBNull(mySqlReader("guestname")) = False Then
                        txtGuestNameValue.Text = mySqlReader("guestname")
                    Else
                        txtGuestNameValue.Text = ""
                    End If
                End If
            End If
        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        Finally
            clsDBConnect.dbCommandClose(myCommand)               'sql command disposed
            clsDBConnect.dbReaderClose(mySqlReader)             ' sql reader disposed    
            clsDBConnect.dbConnectionClose(SqlConn)
        End Try

    End Sub


    Private Sub showvalue(ByVal refcode As String, ByVal lineno As String)
        Try
            SqlConn = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))           'connection open
            myCommand = New SqlCommand("select * from transfer_booking_subdetail where requestid='" & refcode & "' and vlineno =' " & lineno & " ' and tlineno='" & hdntlineno.Value & "'", SqlConn)
            mySqlReader = myCommand.ExecuteReader(CommandBehavior.CloseConnection)
            If mySqlReader.HasRows Then
                If mySqlReader.Read() = True Then

                    If IsDBNull(mySqlReader("pickupdate")) = False Then
                        txtPickUpDate.Text = Format(CType((mySqlReader("pickupdate")), Date), "dd/MM/yyyy")
                    Else
                        txtPickUpDate.Text = Format(CType(objDate.GetSystemDateOnly(Session("dbconnectionName")), Date), "dd/MM/yyyy")
                    End If
                    If IsDBNull(mySqlReader("pickuptime")) = False Then
                        txtPickuptime.Text = (mySqlReader("pickuptime"))
                    Else
                        txtPickuptime.Text = ""
                    End If


                    If IsDBNull(mySqlReader("remarks")) = False Then
                        txtRemarksValue.Text = (mySqlReader("remarks"))
                        txtremarksnew.Text = (mySqlReader("remarks"))
                    Else
                        txtRemarksValue.Text = ""

                    End If



                    If IsDBNull(mySqlReader("status")) = False Then
                        ddlstatus.SelectedIndex = (mySqlReader("status"))
                    Else
                        'ddlstatus.SelectedIndex = 0
                        ddlstatus.SelectedIndex = 2
                    End If

                    hdnstatus.Value = ddlstatus.SelectedIndex


                    If IsDBNull(mySqlReader("transfermode")) = False Then
                        ddlTransferMode.SelectedIndex = (mySqlReader("transfermode"))


                        ddlDriverName.Disabled = False
                        ddlvehiclename.Disabled = False
                    Else
                        ddlTransferMode.SelectedIndex = 1
                    End If

                    hdnTransferMode.Value = ddlTransferMode.SelectedIndex




                    'vij
                    If IsDBNull(mySqlReader("vehiclecode")) = False Then

                        'ddlvehiclename.Value = objUtils.GetDBFieldFromStringnew(Session("dbconnectionName"), "vw_usedfortransfers", "vehiclename", "vehiclecode", mySqlReader("vehiclecode"))
                        'ddlvehiclename.Value = objUtils.GetDBFieldFromStringnew(Session("dbconnectionName"), "vehiclemaster", "vehiclename", "vehiclecode", mySqlReader("vehiclecode"))
                        objUtils.FillDropDownListHTMLNEW(Session("dbConnectionName"), ddlvehiclename, "vehiclename", "vehiclecode", "select vehiclename,vehiclecode from vehiclemaster where active=1 and vehiclemaster.vehiclecode='" & mySqlReader("vehiclecode") & "'", True)
                        ddlvehiclename.Value = mySqlReader("vehiclecode")
                    Else
                        ddlvehiclename.Value = "[Select]"
                        hdnvehiclecode.Value = ""
                    End If

                    ''12092014
                    'Select Case hdnTransferMode.Value
                    '    Case 0
                    '        objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlDriverName, "repname", "repcode", "select repname,repcode from Airportrep where isnull(Active,0)=1", True)
                    '    Case 1
                    '        '  If IsDBNull(mySqlReader("suppliercode")) <> "" And IsDBNull(mySqlReader("suppliercode")) <> "[Select]" Then
                    '        If IsDBNull(mySqlReader("suppliercode")) = False Then
                    '            objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlDriverName, "drivername", "drivercode", "select drivername,drivercode from drivermaster where suppcode='" & mySqlReader("suppliercode") & "'", True)
                    '        Else
                    '            objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlDriverName, "drivername", "drivercode", "select drivername,drivercode from drivermaster where active=1  order by drivername", True)
                    '        End If
                    'End Select

                    objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlDriverName, "repname", "repcode", "select repname,repcode from Airportrep where isnull(Active,0)=1", True)

                    If (IsDBNull(mySqlReader("repcode")) = False) Then

                        If mySqlReader("repcode") <> "[Select]" Then
                            ddlDriverName.Value = mySqlReader("repcode")
                        End If


                        txtTelephone.Text = objUtils.GetDBFieldFromStringnew(Session("dbconnectionName"), "Airportrep", "mobileno", "repcode", ddlDriverName.Items(ddlDriverName.SelectedIndex).Value)
                        hdndrivercode.Value = ddlDriverName.Value
                        hdndriverphoneno.Value = txtTelephone.Text
                        ''ddlDriverName.Disabled = False
                        ddlvehiclename.Disabled = False

                    Else
                        ''ddlDriverName.Value = "[Select]"
                        txtTelephone.Text = ""
                        hdndrivercode.Value = ""
                        ''10092014
                        'ddlDriverName.Disabled = True
                        'ddlvehiclename.Disabled = True
                    End If



                    '07082014

                    If (hdnTransferMode.Value = "0") Then
                        ddlDriverName.Disabled = False
                        ddlvehiclename.Disabled = False

                        ddlSupplier.Value = "[Select]"
                        txtSupplierCurr.Text = ""
                        txtCostPrice.Text = ""
                        chkSupplier.Text = ""

                        ddlSupplier.Disabled = True
                        txtSupplierCurr.Enabled = False
                        txtCostPrice.Enabled = False
                        chkSupplier.Enabled = False
                        ddlTransferMode.SelectedIndex = 0



                    ElseIf (hdnTransferMode.Value = "1") Then

                        ''ddlDriverName.Value = "[Select]"
                        ''ddlvehiclename.Value = "[Select]"
                        ''txtTelephone.Text = ""

                        ''10092014
                        'ddlDriverName.Disabled = True
                        'ddlvehiclename.Disabled = True
                        ddlTransferMode.SelectedIndex = 1
                        ddlSupplier.Disabled = False
                        txtSupplierCurr.Enabled = True
                        txtCostPrice.Enabled = True
                        chkSupplier.Enabled = True

                    Else
                        ''ddlDriverName.Value = "[Select]"
                        ''ddlvehiclename.Value = "[Select]"
                        txtTelephone.Text = ""

                        ''10092014
                        ''ddlDriverName.Disabled = True
                        ''ddlvehiclename.Disabled = True
                        ddlTransferMode.SelectedIndex = 2
                        ddlSupplier.Disabled = True
                        txtSupplierCurr.Enabled = True
                        txtCostPrice.Enabled = True
                        chkSupplier.Enabled = True

                    End If



                    ddlSupplier.Value = "[Select]"
                    If IsDBNull(mySqlReader("suppliercode")) = False Then

                        ddlSupplier.Value = (mySqlReader("suppliercode"))
                        hdnsuppliercode.Value = ddlSupplier.Value

                    Else
                        ddlSupplier.Value = "[Select]"

                    End If





                    If IsDBNull(mySqlReader("suppliercurr")) = False Then
                        txtSupplierCurr.Text = (mySqlReader("suppliercurr"))
                        hdnsuppliercurrency.Value = (mySqlReader("suppliercurr"))
                    Else
                        txtSupplierCurr.Text = ""
                    End If
                    If IsDBNull(mySqlReader("costprice")) = False Then
                        txtCostPrice.Text = (mySqlReader("costprice"))
                        hdncostprice.Value = (mySqlReader("costprice"))
                    Else
                        txtCostPrice.Text = ""
                    End If

                    If IsDBNull(mySqlReader("complementsup")) = False Then
                        If mySqlReader("complementsup") = 0 Then
                            chkSupplier.Checked = False
                            hdncomsupplier.Value = 0
                        Else
                            chkSupplier.Checked = True
                            hdncomsupplier.Value = 1
                        End If
                    Else
                        chkSupplier.Checked = False
                    End If

                    If IsDBNull(mySqlReader("sentsup")) = False Then
                        If mySqlReader("sentsup") = 0 Then
                            chksentsup.Checked = False
                            'hdncomsupplier.Value = 0
                        Else
                            chksentsup.Checked = True
                            'hdncomsupplier.Value = 1
                        End If
                    Else
                        chksentsup.Checked = False
                    End If

                End If
            End If
        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        Finally
            clsDBConnect.dbCommandClose(myCommand)               'sql command disposed
            clsDBConnect.dbReaderClose(mySqlReader)             ' sql reader disposed    
            clsDBConnect.dbConnectionClose(SqlConn)
        End Try
    End Sub




    Sub costpricecalculation(ByVal cartype As String, ByVal startingpoint As String, ByVal endingpoint As String)

        If CType(txtTransferDatevalue.Text, String) <> "" And endingpoint <> "[Select]" And endingpoint <> "" And startingpoint <> "[Select]" And startingpoint <> "" And CType(ddlTransferType.SelectedIndex, Integer) <> -1 And cartype <> "[Select]" And cartype <> "" Then


            Try
                'If validate_function() = False Then

                'End If

                Dim ds As New DataSet
                mySqlConn = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))           'connection open
                mySqlCmd = New SqlCommand("sp_get_transfer_costprice", mySqlConn)
                mySqlCmd.Parameters.AddWithValue("@transferdate", CType(txtTransferDatevalue.Text, Date))
                mySqlCmd.Parameters.AddWithValue("@transfertype", CType(ddlTransferType.SelectedIndex, String))
                mySqlCmd.Parameters.AddWithValue("@cartype", cartype)
                mySqlCmd.Parameters.AddWithValue("@startingpoint", startingpoint)
                mySqlCmd.Parameters.AddWithValue("@endingpoint", endingpoint)
                mySqlCmd.CommandType = CommandType.StoredProcedure
                mySqlCmd.ExecuteNonQuery()

                Dim da = New SqlDataAdapter()

                da.SelectCommand = mySqlCmd

                da.Fill(ds)


                If Not ds Is Nothing Then
                    If ds.Tables.Count > 0 Then
                        If ds.Tables(0).Rows.Count > 0 Then
                            txtCostPrice.Text = ds.Tables(0).Rows(0).Item(0)
                        Else
                            txtCostPrice.Text = ""
                        End If
                    End If
                End If

                If check_Privilege() = 1 Then

                    txtCostPrice.ReadOnly = False
                Else

                    txtCostPrice.ReadOnly = True
                End If


                clsDBConnect.dbCommandClose(mySqlCmd)               'sql command disposed
                clsDBConnect.dbConnectionClose(mySqlConn)           'connection close

            Catch ex As Exception
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
                objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))

            End Try
        End If
    End Sub
    Public Function check_Privilege() As Integer
        Try
            Dim strSql As String
            Dim usrCode As String
            usrCode = CType(Session("GlobalUserName"), String)
            'mySqlConn = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))           'connection open
            strSql = "select appid from group_privilege_Detail where privilegeid='30' and appid='10' and "
            strSql += "groupid=(SELECT groupid FROM UserMaster WHERE UserCode='" + usrCode + "')"
            'mySqlCmd = New SqlCommand(strSql, mySqlConn)
            'mySqlReader = mySqlCmd.ExecuteReader(CommandBehavior.CloseConnection)

            Dim ds1 As DataSet = objUtils.ExecuteQuerySqlnew(Session("dbconnectionName"), strSql)
            If ds1.Tables.Count > 0 Then
                If ds1.Tables(0).Rows.Count > 0 Then
                    Return 1
                Else
                    Return 0
                End If
            End If


        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("TransfersRequestSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        Finally
            'clsDBConnect.dbCommandClose(mySqlCmd)               'sql command disposed
            'clsDBConnect.dbReaderClose(mySqlReader)             ' sql reader disposed    
            'clsDBConnect.dbConnectionClose(mySqlConn)           'connection close 
        End Try
    End Function

    Protected Sub btnSave_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSave.Click
        Try
            If Page.IsValid = True Then

                If ValidateSave() = False Then
                    Exit Sub
                End If

                SqlConn = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))           'connection open
                sqlTrans = SqlConn.BeginTransaction
                myCommand = New SqlCommand("sp_update_transfer_booking_detail1_airportrep", SqlConn, sqlTrans)
                myCommand.CommandType = CommandType.StoredProcedure


                myCommand.Parameters.Add(New SqlParameter("@requestid", SqlDbType.VarChar, 20)).Value = txtTransferIDvalue.Text
                myCommand.Parameters.Add(New SqlParameter("@tlineno", SqlDbType.VarChar, 20)).Value = CType(hdntlineno.Value, String)

                myCommand.Parameters.Add(New SqlParameter("@vlineno", SqlDbType.Int)).Value = hdnvlineno.Value

                myCommand.Parameters.Add(New SqlParameter("@transfermode", SqlDbType.Int)).Value = ddlTransferMode.SelectedIndex 'Val(IIf(ddlTransferMode.SelectedValue = "Own Transport", 0, 1))
                myCommand.Parameters.Add(New SqlParameter("@status", SqlDbType.Int)).Value = Val(IIf(ddlstatus.SelectedValue = "Confirm", 0, IIf(ddlstatus.SelectedValue = "Cancel", 1, 2)))
                If ddlvehiclename.Items(ddlvehiclename.SelectedIndex).Value <> "[Select]" Then
                    myCommand.Parameters.Add(New SqlParameter("@vehiclecode", SqlDbType.VarChar, 20)).Value = ddlvehiclename.Items(ddlvehiclename.SelectedIndex).Value 'hdnvehiclecode.Value
                Else
                    myCommand.Parameters.Add(New SqlParameter("@vehiclecode", SqlDbType.VarChar, 20)).Value = DBNull.Value
                End If
                If ddlDriverName.Items(ddlDriverName.SelectedIndex).Value <> "[Select]" Then
                    myCommand.Parameters.Add(New SqlParameter("@drivercode", SqlDbType.VarChar, 20)).Value = hdndrivercode.Value ''ddlDriverName.Items(ddlDriverName.SelectedIndex).Value
                Else
                    myCommand.Parameters.Add(New SqlParameter("@drivercode", SqlDbType.VarChar, 20)).Value = DBNull.Value
                End If



                myCommand.Parameters.Add(New SqlParameter("@pickupdate", SqlDbType.DateTime)).Value = objDate.ConvertDateromTextBoxToDatabase(txtPickUpDate.Text)
                myCommand.Parameters.Add(New SqlParameter("@pickuptime", SqlDbType.VarChar, 500)).Value = txtPickuptime.Text
                If ddlSupplier.Items(ddlSupplier.SelectedIndex).Value <> "[Select]" Then
                    myCommand.Parameters.Add(New SqlParameter("@suppliercode", SqlDbType.VarChar, 20)).Value = ddlSupplier.Items(ddlSupplier.SelectedIndex).Value
                    myCommand.Parameters.Add(New SqlParameter("@suppliercurr", SqlDbType.VarChar, 10)).Value = txtSupplierCurr.Text
                    myCommand.Parameters.Add(New SqlParameter("@costprice", SqlDbType.Decimal)).Value = Val(txtCostPrice.Text) 'hdncostprice.Value
                Else
                    myCommand.Parameters.Add(New SqlParameter("@suppliercode", SqlDbType.VarChar, 20)).Value = DBNull.Value
                    myCommand.Parameters.Add(New SqlParameter("@suppliercurr", SqlDbType.VarChar, 10)).Value = DBNull.Value
                    myCommand.Parameters.Add(New SqlParameter("@costprice", SqlDbType.Decimal)).Value = DBNull.Value
                End If


                If chkSupplier.Checked = True Then
                    myCommand.Parameters.Add(New SqlParameter("@complementsup", SqlDbType.Int)).Value = 1
                Else
                    myCommand.Parameters.Add(New SqlParameter("@complementsup", SqlDbType.Int)).Value = 0
                End If


                myCommand.Parameters.Add(New SqlParameter("@remarks", SqlDbType.VarChar, 1000)).Value = txtremarksnew.Text

                If chksentsup.Checked = True Then
                    myCommand.Parameters.Add(New SqlParameter("@sentsup", SqlDbType.Int)).Value = 1
                Else
                    myCommand.Parameters.Add(New SqlParameter("@sentsup", SqlDbType.Int)).Value = 0
                End If

                myCommand.Parameters.Add(New SqlParameter("@userlogged", SqlDbType.VarChar, 20)).Value = Session("GlobalUserName")

                myCommand.ExecuteNonQuery()

                sqlTrans.Commit()    'SQl Tarn Commit
                clsDBConnect.dbSqlTransation(sqlTrans)              ' sql Transaction disposed 
                clsDBConnect.dbCommandClose(myCommand)               'sql command disposed
                clsDBConnect.dbConnectionClose(SqlConn)

                clearfields()
            End If
            'ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Record Saved Successfully.');", True)
            divassigntransfer.Style("display") = "none"
            divassigntransfer.Style("visibility") = "hidden"
            btnResult_Click(sender, e)
        Catch ex As Exception

            If SqlConn.State = ConnectionState.Open Then
                sqlTrans.Rollback()
            End If
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        End Try

    End Sub

    Private Function ValidateSave() As Boolean

        ValidateSave = True
        'If ddlTransferMode.SelectedIndex = 0 Then
        '    If ddlDriverName.Items(ddlDriverName.SelectedIndex).Text = "[Select]" Then

        '        ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Please Select Driver Name');", True)
        '        SetFocus(ddlDriverName)
        '        ValidateSave = False
        '        Exit Function
        '    End If
        'Else

        '    If (ddlTransferMode.SelectedIndex = 1 And ddlTransferType.SelectedIndex <> 1) Then
        '        If ddlSupplier.Items(ddlSupplier.SelectedIndex).Text = "[Select]" Then
        '            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Please Select Supplier Name');", True)
        '            SetFocus(ddlSupplier)
        '            ValidateSave = False
        '            Exit Function
        '        End If
        '    End If




        'End If
        'If (ddlTransferMode.SelectedIndex = 1 And ddlTransferType.SelectedIndex <> 1) Then
        '    If Val(txtCostPrice.Text) > 0 Then

        '    Else
        '        If chkSupplier.Checked = False Then
        '            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Cost Price can not be blank or zero');", True)
        '            SetFocus(txtCostPrice)
        '            ValidateSave = False
        '            Exit Function
        '        End If

        '    End If
        'End If


        'If (ddlTransferMode.SelectedIndex = 0 And ddlSupplier.Items(ddlSupplier.SelectedIndex).Text <> "[Select]") Then

        '    ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Own Transport Supplier Cant Select');", True)
        '    ddlSupplier.Disabled = False
        '    SetFocus(ddlSupplier)
        '            ValidateSave = False
        '            Exit Function

        'End If



    End Function

    Protected Sub btnExport_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnExport.Click
        'Dim pnames As ParameterFieldDefinitions
        'Dim pname As ParameterFieldDefinition
        'Dim param As New ParameterValues
        'Dim paramvalue As New ParameterDiscreteValue

        'Dim ConnInfo As New ConnectionInfo

        'Dim strg As String
        'Dim path As String
        'Dim number As Integer


        'Dim strvalue As String
        '' print_filename = App.path & "\reports\" & print_filename

        'strSqlQry = "select count(*) from transfers_booking_header t(nolock) ,transfers_booking_detailnew d(nolock)  where t.requestid = d.requestid"

        'strvalue = Trim(BuildCondition())
        'If strvalue <> "" Then
        '    strSqlQry = strSqlQry & " and " & strvalue & ""
        'Else
        '    strSqlQry = strSqlQry
        'End If


        'number = objUtils.ExecuteQueryReturnSingleValuenew(Session("dbconnectionName"), strSqlQry) 'Open connection



        'If number > 0 Then

        '    With ConnInfo
        '        .ServerName = Session("dbServerName")
        '        .DatabaseName = Session("dbDatabaseName")
        '        .UserID = Session("dbUserName")
        '        .Password = Session("dbPassword")
        '    End With

        '    repDeocument.Load(Server.MapPath("~\Report\trfdriver_excel.rpt"))

        '    'Me.CRVReport.ReportSource = repDeocument
        '    Dim RepTbls As Tables = repDeocument.Database.Tables

        '    For Each RepTbl As Table In RepTbls
        '        Dim RepTblLogonInfo As TableLogOnInfo = RepTbl.LogOnInfo
        '        RepTblLogonInfo.ConnectionInfo = ConnInfo
        '        RepTbl.ApplyLogOnInfo(RepTblLogonInfo)
        '    Next

        '    'repDeocument.SummaryInfo.ReportTitle = strReportTitle
        '    pnames = repDeocument.DataDefinition.ParameterFields
        '    strSelectionFormula = "{transfers_booking.requestid}= '" & Request.QueryString("Refcode") & "'"
        '    pname = pnames.Item("trftype")
        '    paramvalue.Value = ddlTransferType.SelectedIndex
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)



        '    pname = pnames.Item("chkdate")
        '    If chkDate.Checked = True Then
        '        paramvalue.Value = "1"
        '    Else
        '        paramvalue.Value = "0"
        '    End If

        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)


        '    pname = pnames.Item("chktransferdate")
        '    'paramvalue.Value = Val(chkTransferDate.Text)
        '    If chkTransferDate.Checked = True Then
        '        paramvalue.Value = "1"
        '    Else
        '        paramvalue.Value = "0"
        '    End If


        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)





        '    pname = pnames.Item("fromdate")
        '    paramvalue.Value = Format(CType((fromdate.Text), Date), "yyyy/MM/dd")
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)

        '    pname = pnames.Item("todate")
        '    paramvalue.Value = Format(CType((txtodate.Text), Date), "yyyy/MM/dd")
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)





        '    pname = pnames.Item("tranfromdate")
        '    paramvalue.Value = Format(CType((txtTransFrmDate.Text), Date), "yyyy/MM/dd")
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)

        '    pname = pnames.Item("trantodate")
        '    paramvalue.Value = Format(CType((txtTransferTodate.Text), Date), "yyyy/MM/dd")
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)


        '    pname = pnames.Item("transferid")
        '    paramvalue.Value = txttransferId.Text
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)

        '    pname = pnames.Item("agentref")
        '    paramvalue.Value = txtClientRef.Text
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)

        '    pname = pnames.Item("guestname")
        '    paramvalue.Value = txtGuestname.Text.Trim
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)

        '    pname = pnames.Item("hotelname")
        '    paramvalue.Value = ddlHotelName.Items(ddlHotelName.SelectedIndex).Value
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)

        '    pname = pnames.Item("flightname")
        '    paramvalue.Value = ddlFlightName.Items(ddlFlightName.SelectedIndex).Value
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)

        '    pname = pnames.Item("agentname")
        '    paramvalue.Value = ddlAgent.Items(ddlAgent.SelectedIndex).Value
        '    param = pname.CurrentValues
        '    param.Add(paramvalue)
        '    pname.ApplyCurrentValues(param)



        '    Dim objExcelOptions As ExcelFormatOptions = New ExcelFormatOptions
        '    objExcelOptions.ExcelUseConstantColumnWidth = False
        '    repDeocument.ExportOptions.FormatOptions = objExcelOptions

        '    repDeocument.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile
        '    repDeocument.ExportOptions.ExportFormatType = ExportFormatType.Excel

        '    objExcelOptions.ExcelUseConstantColumnWidth = False
        '    repDeocument.ExportOptions.FormatOptions = objExcelOptions
        '    Dim objOptions As DiskFileDestinationOptions = New DiskFileDestinationOptions
        '    objOptions.DiskFileName = "C:\exportexcel\" + Trim("Driver") + ".xls"
        '    repDeocument.ExportOptions.DestinationOptions = objOptions
        '    repDeocument.Export()
        '    objOptions = Nothing
        '    repDeocument = Nothing
        '    'Response.Redirect(print_filename)


        '    ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Export to excel convert completed');", True)



        'Else
        '    ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('No Records To Export');", True)


        'End If


        excelexport()

    End Sub


    Protected Sub btndriverreport_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btndriverreport.Click
        Try


            divassigntransfer.Style("display") = "none"
            divassigntransfer.Style("visibility") = "hidden"



            Dim checkedrequest As String
            Dim checkedtransfer As String
            If chkDate.Checked = True Then
                checkedrequest = "1"
            Else
                checkedrequest = "0"
            End If

            If chkTransferDate.Checked = True Then
                checkedtransfer = "1"
            Else
                checkedtransfer = "0"
            End If
            Dim showsupp As String

            If chkshow.Checked = True Then
                showsupp = "1"
            Else
                showsupp = "0"
            End If
            Dim strpop As String = ""
            'strpop = "window.open('rptReportNew.aspx?Pageame=AirportrepReport&BackPageName=AssignAirportrepSearch.aspx&TranID=" & txttransferId.Text.Trim & "&HotelCode=" & Trim(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value) & "&AgentCode=" & Trim(ddlAgent.Items(ddlAgent.SelectedIndex).Value) & "&FlightCode=" & Trim(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value) & "&TransferId=" & Trim(txttransferId.Text) & "&Guestname=" & Trim(txtGuestname.Text) & "&AgentRef=" & Trim(txtClientRef.Text) & "&fromtransfer=" & Trim(txtTransFrmDate.Text) & "&totransfer=" & Trim(txtTransferTodate.Text) & "&fromrequest=" & Trim(fromdate.Text) & "&torequest=" & Trim(txtodate.Text) & "&transfertype=" & ddlTransferType.SelectedIndex & "&showsupp=" & showsupp & "&checkedrequest=" & checkedrequest & "&checkedtransfer=" & checkedtransfer & "','RepChildPol','width=1000,height=620 left=20,top=20 status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes');"
            strpop = "window.open('rptReportNew.aspx?Pageame=AirportrepReport&BackPageName=AssignAirportrepSearch.aspx&TranID=" & txttransferId.Text.Trim & "&HotelCode=" & Trim(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value) & "&AgentCode=" & Trim(ddlAgent.Items(ddlAgent.SelectedIndex).Value) & "&FlightCode=" & Trim(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value) & "&TransferId=" & Trim(txttransferId.Text) & "&Guestname=" & Trim(txtGuestname.Text) & "&AgentRef=" & Trim(txtClientRef.Text) & "&fromtransfer=" & Trim(txtTransFrmDate.Text) & "&totransfer=" & Trim(txtTransferTodate.Text) & "&fromrequest=" & Trim(fromdate.Text) & "&torequest=" & Trim(txtodate.Text) & "&transfertype=" & ddlTransferType.SelectedIndex & "&showsupp=" & showsupp & "&checkedrequest=" & checkedrequest & "&checkedtransfer=" & checkedtransfer & "','RepChildPol');"
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        End Try
    End Sub





    Protected Sub btnDrOperation_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDrOperation.Click
        Try
            divassigntransfer.Style("display") = "none"
            divassigntransfer.Style("visibility") = "hidden"

            Dim checkedrequest As String
            Dim checkedtransfer As String
            If chkDate.Checked = True Then
                checkedrequest = "1"
            Else
                checkedrequest = "0"
            End If

            If chkTransferDate.Checked = True Then
                checkedtransfer = "1"
            Else
                checkedtransfer = "0"
            End If

            Dim strpop As String = ""
            'strpop = "window.open('rptReportNew.aspx?Pageame=DriverOperation&BackPageName=AssignDriversSearch.aspx&TranID=" & txttransferId.Text.Trim & "&HotelCode=" & Trim(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value) & "&AgentCode=" & Trim(ddlAgent.Items(ddlAgent.SelectedIndex).Value) & "&FlightCode=" & Trim(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value) & "&TransferId=" & Trim(txttransferId.Text) & "&Guestname=" & Trim(txtGuestname.Text) & "&AgentRef=" & Trim(txtClientRef.Text) & "&fromtransfer=" & Trim(txtTransFrmDate.Text) & "&totransfer=" & Trim(txtTransferTodate.Text) & "&fromrequest=" & Trim(fromdate.Text) & "&torequest=" & Trim(txtodate.Text) & "&transfertype=" & ddlTransferType.SelectedIndex & "&checkedrequest=" & checkedrequest & "&checkedtransfer=" & checkedtransfer & "','RepChildPol','width=1000,height=620 left=20,top=20 status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes');"
            strpop = "window.open('rptReportNew.aspx?Pageame=DriverOperation&BackPageName=AssignDriversSearch.aspx&TranID=" & txttransferId.Text.Trim & "&HotelCode=" & Trim(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value) & "&AgentCode=" & Trim(ddlAgent.Items(ddlAgent.SelectedIndex).Value) & "&FlightCode=" & Trim(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value) & "&TransferId=" & Trim(txttransferId.Text) & "&Guestname=" & Trim(txtGuestname.Text) & "&AgentRef=" & Trim(txtClientRef.Text) & "&fromtransfer=" & Trim(txtTransFrmDate.Text) & "&totransfer=" & Trim(txtTransferTodate.Text) & "&fromrequest=" & Trim(fromdate.Text) & "&torequest=" & Trim(txtodate.Text) & "&transfertype=" & ddlTransferType.SelectedIndex & "&checkedrequest=" & checkedrequest & "&checkedtransfer=" & checkedtransfer & "','RepChildPol');"
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        End Try
    End Sub

    Protected Sub btnTransport_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnTransport.Click
        Try
            divassigntransfer.Style("display") = "none"
            divassigntransfer.Style("visibility") = "hidden"


            Dim checkedrequest As String
            Dim checkedtransfer As String
            If chkDate.Checked = True Then
                checkedrequest = "1"
            Else
                checkedrequest = "0"
            End If

            If chkTransferDate.Checked = True Then
                checkedtransfer = "1"
            Else
                checkedtransfer = "0"
            End If
            Dim strpop As String = ""
            'strpop = "window.open('rptReportNew.aspx?Pageame=TransportRequest&BackPageName=AssignDriversSearch.aspx&TranID=" & txttransferId.Text.Trim & "&HotelCode=" & Trim(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value) & "&AgentCode=" & Trim(ddlAgent.Items(ddlAgent.SelectedIndex).Value) & "&FlightCode=" & Trim(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value) & "&TransferId=" & Trim(txttransferId.Text) & "&Guestname=" & Trim(txtGuestname.Text) & "&AgentRef=" & Trim(txtClientRef.Text) & "&fromtransfer=" & Trim(txtTransFrmDate.Text) & "&totransfer=" & Trim(txtTransferTodate.Text) & "&fromrequest=" & Trim(fromdate.Text) & "&torequest=" & Trim(txtodate.Text) & "&transfertype=" & ddlTransferType.SelectedIndex & "&checkedrequest=" & checkedrequest & "&checkedtransfer=" & checkedtransfer & "','RepChildPol','width=1000,height=620 left=20,top=20 status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes');"
            strpop = "window.open('rptReportNew.aspx?Pageame=TransportRequest&BackPageName=AssignDriversSearch.aspx&TranID=" & txttransferId.Text.Trim & "&HotelCode=" & Trim(ddlHotelName.Items(ddlHotelName.SelectedIndex).Value) & "&AgentCode=" & Trim(ddlAgent.Items(ddlAgent.SelectedIndex).Value) & "&FlightCode=" & Trim(ddlFlightName.Items(ddlFlightName.SelectedIndex).Value) & "&TransferId=" & Trim(txttransferId.Text) & "&Guestname=" & Trim(txtGuestname.Text) & "&AgentRef=" & Trim(txtClientRef.Text) & "&fromtransfer=" & Trim(txtTransFrmDate.Text) & "&totransfer=" & Trim(txtTransferTodate.Text) & "&fromrequest=" & Trim(fromdate.Text) & "&torequest=" & Trim(txtodate.Text) & "&transfertype=" & ddlTransferType.SelectedIndex & "&checkedrequest=" & checkedrequest & "&checkedtransfer=" & checkedtransfer & "','RepChildPol');"
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("AssignDriversSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        End Try
    End Sub

    'Protected Sub ddlTransferMode_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlTransferMode.SelectedIndexChanged

    '    If ddlTransferMode.SelectedIndex = 1 Then
    '        If ddlDriverName.Items(ddlDriverName.SelectedIndex).Text <> "[Select]" Then

    '            ddlDriverName.Items(ddlDriverName.SelectedIndex).Text = "[Select]"
    '            ddlDriverName.Disabled = True

    '        Else

    '            ddlDriverName.Disabled = True
    '        End If

    '        costpricecalculation()
    '    End If


    'End Sub


    Private Sub clearfields()
        ddlstatus.SelectedIndex = 0
        ddlTransferMode.SelectedIndex = 1
        ddlDriverName.Value = "[Select]"
        ddlvehiclename.Value = "[Select]"
        txtRemarksValue.Text = ""
        ddlSupplier.Value = "[Select]"
        txtSupplierCurr.Text = ""
        txtCostPrice.Text = ""
        txtTelephone.Text = ""
        chkSupplier.Checked = False






    End Sub

    Protected Sub chkSupplier_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkSupplier.CheckedChanged
        If chkSupplier.Checked = True Then
            hdncomsupplier.Value = 1
        Else
            hdncomsupplier.Value = 0
        End If
    End Sub



    Private Function validateWithgConfirmBox() As Boolean
        Dim strConfTxt As String = ""
        strConfTxt = "Are you sure want to remove assign?"
        ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "javascript:confirmarrival('" & strConfTxt & "');", True)
        Return False
    End Function

    Protected Sub btnRemove_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnRemove.Click





        SqlConn = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))           'connection open
        sqlTrans = SqlConn.BeginTransaction
        myCommand = New SqlCommand("sp_update_transfer_booking_detail1", SqlConn, sqlTrans)
        myCommand.CommandType = CommandType.StoredProcedure


        myCommand.Parameters.Add(New SqlParameter("@requestid", SqlDbType.VarChar, 20)).Value = hdntransaction.Value
        myCommand.Parameters.Add(New SqlParameter("@tlineno", SqlDbType.VarChar, 20)).Value = hdntlineno.Value
        myCommand.Parameters.Add(New SqlParameter("@vlineno", SqlDbType.VarChar, 20)).Value = hdnvlineno.Value
        myCommand.Parameters.Add(New SqlParameter("@transfermode", SqlDbType.Int)).Value = DBNull.Value
        myCommand.Parameters.Add(New SqlParameter("@status", SqlDbType.Int)).Value = DBNull.Value
        myCommand.Parameters.Add(New SqlParameter("@vehiclecode", SqlDbType.VarChar, 20)).Value = DBNull.Value
        myCommand.Parameters.Add(New SqlParameter("@drivercode", SqlDbType.VarChar, 50)).Value = DBNull.Value
        myCommand.Parameters.Add(New SqlParameter("@pickupdate", SqlDbType.DateTime)).Value = hdnpickupdate.Value
        myCommand.Parameters.Add(New SqlParameter("@pickuptime", SqlDbType.VarChar, 500)).Value = hdnpickuptime.Value
        myCommand.Parameters.Add(New SqlParameter("@suppliercode", SqlDbType.VarChar, 20)).Value = DBNull.Value
        myCommand.Parameters.Add(New SqlParameter("@suppliercurr", SqlDbType.VarChar, 10)).Value = DBNull.Value
        myCommand.Parameters.Add(New SqlParameter("@costprice", SqlDbType.Decimal)).Value = DBNull.Value
        myCommand.Parameters.Add(New SqlParameter("@complementsup", SqlDbType.Int)).Value = 0
        myCommand.Parameters.Add(New SqlParameter("@remarks", SqlDbType.VarChar, 1000)).Value = ""

        myCommand.Parameters.Add(New SqlParameter("@sentsup", SqlDbType.Int)).Value = 0

        myCommand.Parameters.Add(New SqlParameter("@userlogged", SqlDbType.VarChar, 20)).Value = Session("GlobalUserName")
        myCommand.ExecuteNonQuery()

        sqlTrans.Commit()    'SQl Tarn Commit
        clsDBConnect.dbSqlTransation(sqlTrans)              ' sql Transaction disposed 
        clsDBConnect.dbCommandClose(myCommand)               'sql command disposed
        clsDBConnect.dbConnectionClose(SqlConn)

        ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Assigned values are removed');", True)
        btnResult_Click(sender, e)

    End Sub

    Protected Sub ddlTransferType_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlTransferType.SelectedIndexChanged
        btnResult_Click(sender, e)
    End Sub

    Protected Sub ddlTransferType_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlTransferType.TextChanged

    End Sub
End Class
