Imports System.Data
Imports System.Data.SqlClient
Partial Class VehicleSearch
    Inherits System.Web.UI.Page

#Region "Global Declarations"
    Dim objUtils As New clsUtils
    Dim objUser As New clsUser
    Dim strSqlQry As String
    Dim strWhereCond As String
    Dim strwherecond1 As String
    Dim SqlConn As SqlConnection
    Dim myCommand As SqlCommand
    Dim myDataAdapter As SqlDataAdapter
    Dim myappid As String
#End Region

#Region "Enum GridCol"
    Enum GridCol
        VehicleCodeTCol = 0
        VehicleCode = 1
        vehiclename = 2
        VehicleMCode = 3
        VehicleTCode = 4
        Active = 5
        DateCreated = 6
        UserCreated = 7
        DateModified = 8
        UserModified = 9
        Edit = 10
        View = 11
        Delete = 12
    End Enum
#End Region
    

    Protected Sub btnSearch_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSearch.Click
        Try
            Select Case ddlOrderBy.SelectedIndex
                Case 0
                    FillGrid("vehiclename")
                Case 1
                    FillGrid("vehiclecode")


            End Select
        Catch ex As Exception

        End Try
       
    End Sub

    Protected Sub btnClear_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnClear.Click
        Try
            txtvehiclecode.Text = ""
            txtvehiclename.Text = ""
            ddlvmcode.Value = "[Select]"
            ddlvmname.Value = "[Select]"
            ddlvtcode.Value = "[Select]"
            ddlvtname.Value = "[Select]"
            ddldrivercode.Value = "[Select]"
            ddldrivername.Value = "[Select]"
            FillGrid("vehiclename")

        Catch ex As Exception

        End Try

           
    End Sub

    Protected Sub btnHelp_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnHelp.Click
        Try
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "window.open('../Help.aspx?hi=VehicleSearch','_blank','status=1,scrollbars=1,top=135,left=760,width=250,height=500');", True)
        Catch ex As Exception

        End Try
    End Sub

    Protected Sub btnPrint_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnPrint.Click
        Try
            Session("ColReportParams") = Nothing

            Dim vmakecode As String
            Dim strpop As String = ""
            'vmakecode = objUtils.GetString(Session("dbconnectionName"), "select vehiclemakecode from vehiclemakemaster where vehiclemakecode='" & txtvehiclemcode.Text & "' or Id=" & txtvehiclemcode.Text & "")
            'strpop = "window.open('rptFLMReport.aspx?Pageame=Vehicle&BackPageName=VehicleSearch.aspx&vehiclecode=" & txtvehiclecode.Text.Trim() & "&vehiclename=" & txtvehiclename.Text.Trim & "&vehiclemakecode=" & ddlvmcode.Items(ddlvmcode.SelectedIndex).Text & "&othcatcode=" & ddlvtcode.Items(ddlvtcode.SelectedIndex).Text & "&drivercode=" & ddldrivercode.Items(ddldrivercode.SelectedIndex).Text & "','RepVehicles','width=1000,height=620 left=20,top=20 status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes');"
            strpop = "window.open('rptFLMReport.aspx?Pageame=Vehicle&BackPageName=VehicleSearch.aspx&vehiclecode=" & txtvehiclecode.Text.Trim() & "&vehiclename=" & txtvehiclename.Text.Trim & "&vehiclemakecode=" & ddlvmcode.Items(ddlvmcode.SelectedIndex).Text & "&othcatcode=" & ddlvtcode.Items(ddlvtcode.SelectedIndex).Text & "&drivercode=" & ddldrivercode.Items(ddldrivercode.SelectedIndex).Text & "','RepVehicles');"
            ' strpop = "window.open('rptFLMReport.aspx?vehiclemakecode=" + txtvehiclemakecode.Text.Trim() + "&vehiclemakename=" + txtvehiclemakename.Text.Trim + "','RepDrivers','width=1000,height=620 left=20,top=20 status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes');"
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("VehicleMakeSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        End Try
    End Sub

    

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        If Page.IsPostBack = False Then
            Try
                '  objUtils.FillDropDownListnew(Session("dbconnectionName"), ddlCountryCode, "ctrycode", "select ctrycode from ctrymast where active=1 order by ctrycode", True)

                Dim AppId As HiddenField = CType(Master.FindControl("hdnAppId"), HiddenField)
                Dim AppName As HiddenField = CType(Master.FindControl("hdnAppName"), HiddenField)
                Dim strappid As String = ""
                Dim strappname As String = ""
                If AppId Is Nothing = False Then
                    strappid = AppId.Value
                    Session("myappid") = strappid
                End If
                If AppName Is Nothing = False Then
                    strappname = AppName.Value
                End If


                SetFocus(txtvehiclecode)

                If CType(Session("GlobalUserName"), String) = Nothing Or CType(Session("Userpwd"), String) = Nothing Then
                    Response.Redirect("~/Login.aspx", False)
                    Exit Sub
                Else
                    objUser.CheckUserRight(Session("dbconnectionName"), CType(Session("GlobalUserName"), String), CType(Session("Userpwd"), String), _
                                             CType(strappname, String), "TransportModule\VehicleSearch.aspx?appid=10", btnAddNew, btnExportToExcel, _
                                                       btnPrint, gv_SearchResult, GridCol.Edit, GridCol.Delete, GridCol.View)
                End If
                objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlvmcode, "vehiclemakecode", "vehiclemakename", "select vehiclemakecode,vehiclemakename from vehiclemakemaster where active=1 order by vehiclemakecode", True)
                objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlvmname, "vehiclemakename", "vehiclemakecode", "select vehiclemakename,vehiclemakecode from vehiclemakemaster where active=1 order by vehiclemakename", True)
                objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlvtcode, "othcatcode", "othcatname", "select othcatcode,othcatname from othcatmast where active=1 and othgrpcode in  (select option_selected from reservation_parameters where param_id=1001)", True)
                objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddlvtname, "othcatname", "othcatcode", "select othcatname,othcatcode from othcatmast where active=1 and othgrpcode in  (select option_selected from reservation_parameters where param_id=1001)", True)

                objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddldrivercode, "drivercode", "drivername", "select drivercode,drivername from drivermaster where active=1 order by drivercode ", True)
                objUtils.FillDropDownListHTMLNEW(Session("dbconnectionName"), ddldrivername, "drivername", "drivercode", "select drivername,drivercode from drivermaster where active=1 order by drivername", True)


                Session.Add("strsortExpression", "citycode")
                Session.Add("strsortdirection", SortDirection.Ascending)

                fillorderby()

                FillGrid("vehiclename")

                Dim typ As Type
                typ = GetType(DropDownList)

                If (Page.ClientScript.IsClientScriptIncludeRegistered(typ, "TADDScript.js")) = False Then
                    Page.ClientScript.RegisterClientScriptInclude(typ, "TADDScript.js", "TADDScript.js")

                    ddlvmcode.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
                    ddlvmname.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
                    ddlvtcode.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
                    ddlvtname.Attributes.Add("onKeyDown", "TADD_OnKeyDown(this);")
                End If
            Catch ex As Exception
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
                objUtils.WritErrorLog("VehicleSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
            End Try
        End If
        btnClear.Attributes.Add("onclick", "javascript:if(confirm('Are you sure you want to clear search criteria?')==false)return false;")
        ClientScript.GetPostBackEventReference(Me, String.Empty)
        If (Me.IsPostBack And Me.Request("__EVENTTARGET") = "VehicleWindowPostBack") Then
            btnSearch_Click(sender, e)
        End If

    End Sub

    Protected Sub btnAddNew_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAddNew.Click
        Try
            Dim strpop As String
            'strpop = "window.open('VehicleMaster.aspx?VehicleState=New','Vehicle','width='+screen.availWidth+' height='+screen.availHeight+' left=0,top=0 status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes');"
            strpop = "window.open('VehicleMaster.aspx?VehicleState=New','Vehicle');"
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
        Catch ex As Exception

        End Try
    End Sub

    Protected Sub rbtnsearch_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles rbtnsearch.CheckedChanged
        Try

            lblvmcode.Visible = False
            lblvmname.Visible = False
            lblvtcode.Visible = False
            lblvtname.Visible = False
            ddlvmcode.Visible = False
            ddlvmname.Visible = False
            ddlvtcode.Visible = False
            ddlvtname.Visible = False
            lbldrivercode.Visible = True
            lbldrivername.Visible = True
            ddldrivercode.Visible = True
            ddldrivername.Visible = True

        Catch ex As Exception

        End Try
    End Sub

    Protected Sub rbtnadsearch_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles rbtnadsearch.CheckedChanged
        Try
            lblvmcode.Visible = True
            lblvmname.Visible = True
            lblvtcode.Visible = True
            lblvtname.Visible = True
            ddlvmcode.Visible = True
            ddlvmname.Visible = True
            ddlvtcode.Visible = True
            ddlvtname.Visible = True
            lbldrivercode.Visible = True
            lbldrivername.Visible = True
            ddldrivercode.Visible = True
            ddldrivername.Visible = True
        Catch ex As Exception

        End Try
    End Sub

    Protected Sub ddlOrderBy_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlOrderBy.SelectedIndexChanged
        Try
            Select Case ddlOrderBy.SelectedIndex
                Case 0
                    FillGrid("vehiclename")
                Case 1
                    FillGrid("vehiclecode")
               

            End Select
        Catch ex As Exception

        End Try

      
    End Sub

    Private Sub fillorderby()
        ddlOrderBy.Items.Clear()
        ddlOrderBy.Items.Add("Vehicle Name")
        ddlOrderBy.Items.Add("Vehicle Code")

        ddlOrderBy.SelectedIndex = 0
    End Sub

    Protected Sub gv_SearchResult_PageIndexChanging(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewPageEventArgs) Handles gv_SearchResult.PageIndexChanging
        Try
            gv_SearchResult.PageIndex = e.NewPageIndex
            '        FillGrid("citycode")
            Select Case ddlOrderBy.SelectedIndex
                Case 0
                    FillGrid("vehiclename")
                Case 1
                    FillGrid("vehiclecode")
            End Select
        Catch ex As Exception

        End Try
    End Sub
    Private Sub FillGrid(ByVal strorderby As String, Optional ByVal strsortorder As String = "ASC")
        Dim myDS As New DataSet

        gv_SearchResult.Visible = True
        lblMsg.Visible = False

        If gv_SearchResult.PageIndex < 0 Then
            gv_SearchResult.PageIndex = 0
        End If
        strSqlQry = ""
        Try

            strSqlQry = "SELECT vehiclemaster.*,vehiclemakemaster.vehiclemakename,othcatmast.othcatname,drivermaster.drivername ,[IsActive]=case when vehiclemaster.active=1 then 'Active' when vehiclemaster.active=0 then 'InActive'end  FROM vehiclemaster " & _
              "inner join vehiclemakemaster on vehiclemaster.vehiclemakecode=vehiclemakemaster.vehiclemakecode " & _
              "inner join othcatmast on vehiclemaster.othcatcode=othcatmast.othcatcode" & _
              " left join drivermaster on vehiclemaster.drivercode =drivermaster.drivercode"


            If Trim(BuildCondition) <> "" Then
                strSqlQry = strSqlQry & " WHERE " & BuildCondition() & " ORDER BY " & strorderby & " " & strsortorder
            Else
                strSqlQry = strSqlQry & " ORDER BY " & strorderby & " " & strsortorder
            End If

            SqlConn = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))                             'Open connection
            myDataAdapter = New SqlDataAdapter(strSqlQry, SqlConn)
            myDataAdapter.Fill(myDS)
            gv_SearchResult.DataSource = myDS

            If myDS.Tables(0).Rows.Count > 0 Then
                gv_SearchResult.DataBind()
            Else
                gv_SearchResult.PageIndex = 0
                gv_SearchResult.DataBind()
                lblMsg.Visible = True
                lblMsg.Text = "Records not found, Please redefine search criteria."
            End If

        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("VehicleSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        Finally
            'clsDBConnect.dbAdapterClose(myDataAdapter)                       'Close adapter
            'clsDBConnect.dbConnectionClose(SqlConn)                          'Close connection
        End Try

    End Sub

    Private Function BuildCondition() As String

        strWhereCond = ""
        strWhereCond1 = ""
       

        If txtvehiclecode.Text.Trim <> "" Then
            If Trim(strWhereCond) = "" Then

                strWhereCond = " upper(vehiclemaster.vehiclecode) LIKE '" & Trim(txtvehiclecode.Text.Trim.ToUpper) & "%'"
            Else
                strWhereCond = strWhereCond & " AND upper(vehiclemaster.vehiclecode) LIKE '" & Trim(txtvehiclecode.Text.Trim.ToUpper) & "%'"
            End If
        End If

        If txtvehiclename.Text.Trim <> "" Then
            If Trim(strWhereCond) = "" Then

                strWhereCond = " upper(vehiclemaster.vehiclename) LIKE '" & Trim(txtvehiclename.Text.Trim.ToUpper) & "%'"
            Else
                strWhereCond = strWhereCond & " AND upper(vehiclemaster.vehiclename) LIKE '" & Trim(txtvehiclename.Text.Trim.ToUpper) & "%'"
            End If
        End If

        If ddlvmcode.Value <> "[Select]" Then
            If Trim(strWhereCond) = "" Then
                strWhereCond = " upper(vehiclemaster.vehiclemakecode) = '" & Trim(ddlvmcode.Items(ddlvmcode.SelectedIndex).Text.Trim.ToUpper) & "'"
            Else
                strWhereCond = strWhereCond & " AND upper(vehiclemaster.vehiclemakecode) = '" & Trim(ddlvmcode.Items(ddlvmcode.SelectedIndex).Text.Trim.ToUpper) & "'"
            End If
        End If
        If ddlvtcode.Value <> "[Select]" Then
            If Trim(strWhereCond) = "" Then
                strWhereCond = " upper(vehiclemaster.othcatcode) = '" & Trim(ddlvtcode.Items(ddlvtcode.SelectedIndex).Text.Trim.ToUpper) & "'"
            Else
                strWhereCond = strWhereCond & " AND upper(vehiclemaster.othcatcode) = '" & Trim(ddlvtcode.Items(ddlvtcode.SelectedIndex).Text.Trim.ToUpper) & "'"
            End If
        End If

        If ddldrivercode.Value <> "[Select]" Then
            If Trim(strWhereCond) = "" Then
                strWhereCond = " upper(vehiclemaster.drivercode) = '" & Trim(ddldrivercode.Items(ddldrivercode.SelectedIndex).Text.Trim.ToUpper) & "'"
            Else
                strWhereCond = strWhereCond & " AND upper(vehiclemaster.drivercode) = '" & Trim(ddldrivercode.Items(ddldrivercode.SelectedIndex).Text.Trim.ToUpper) & "'"
            End If
        End If

        If Session("myappid") = 10 Then
            If strWhereCond = "" Then
                strWhereCond = " isnull(vehiclemaster.usedfor,0)=0  "
            Else
                strWhereCond = strWhereCond & " and isnull(vehiclemaster.usedfor,0)=0  "
            End If
        Else
            If strWhereCond = "" Then
                strWhereCond = " isnull(vehiclemaster.usedfor,0)=1  "
            Else
                strWhereCond = strWhereCond & " and isnull(vehiclemaster.usedfor,0)=1 "
            End If
        End If


        BuildCondition = strWhereCond

       
        'BuildCondition = strWhereCond
    End Function

    Protected Sub gv_SearchResult_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles gv_SearchResult.RowCommand
        Try
            If e.CommandName = "Page" Then Exit Sub

            If e.CommandName = "Sort" Then Exit Sub
            


            Dim lblCode As Label
            lblCode = gv_SearchResult.Rows(CType(e.CommandArgument.ToString, String)).FindControl("lblCode")

            If e.CommandName = "EditRow" Then
                Dim strpop As String = ""
                'strpop = "window.open('VehicleMaster.aspx?VehicleState=Edit&VehicleRefCode=" + CType(lblCode.Text.Trim, String) + "','Vehicles','width='+screen.availWidth+' height='+screen.availHeight+' left=0,top=0 status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes');"
                strpop = "window.open('VehicleMaster.aspx?VehicleState=Edit&VehicleRefCode=" + CType(lblCode.Text.Trim, String) + "','Vehicles');"
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
            ElseIf e.CommandName = "View" Then
                Dim strpop As String = ""
                'strpop = "window.open('VehicleMaster.aspx?VehicleState=View&VehicleRefCode=" + CType(lblCode.Text.Trim, String) + "','Cities','width='+screen.availWidth+' height='+screen.availHeight+' left=0,top=0 status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes');"
                strpop = "window.open('VehicleMaster.aspx?VehicleState=View&VehicleRefCode=" + CType(lblCode.Text.Trim, String) + "','Cities');"
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
            ElseIf e.CommandName = "DeleteRow" Then
                Dim strpop As String = ""
                'strpop = "window.open('VehicleMaster.aspx?VehicleState=Delete&VehicleRefCode=" + CType(lblCode.Text.Trim, String) + "','Vehicles','width='+screen.availWidth+' height='+screen.availHeight+' left=0,top=0 status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes');"
                strpop = "window.open('VehicleMaster.aspx?VehicleState=Delete&VehicleRefCode=" + CType(lblCode.Text.Trim, String) + "','Vehicles');"
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
            End If
        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
            objUtils.WritErrorLog("VehicleSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
        End Try
    End Sub

    Protected Sub btnExportToExcel_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnExportToExcel.Click
        Dim DS As New DataSet
        Dim DA As SqlDataAdapter
        Dim con As SqlConnection
        Dim objcon As New clsDBConnect

        Try
            If gv_SearchResult.Rows.Count <> 0 Then



                strSqlQry = "SELECT vehiclemaster.vehiclecode as [Vehicle Reg No.],vehiclemaster.vehiclename as [Vehicle Name],vehiclemaster.color as [Color],vehiclemaster.model as [Model],vehiclemakemaster.vehiclemakename as [Vehicle Make Name],othcatmast.othcatname as [Vehicle Type],drivermaster.drivername [Driver Name],[IsActive]=case when vehiclemaster.active=1 then 'Active' when vehiclemaster.active=0 then 'InActive'end ,vehiclemaster.adddate as  [Date Created] ,vehiclemaster.adduser as  [User Created],vehiclemaster.moddate as  [Date Modified],vehiclemaster.moduser as  [User Modified] FROM vehiclemaster " & _
              "inner join vehiclemakemaster on vehiclemaster.vehiclemakecode=vehiclemakemaster.vehiclemakecode " & _
              "inner join othcatmast on vehiclemaster.othcatcode=othcatmast.othcatcode" & _
              " left join drivermaster on vehiclemaster.drivercode =drivermaster.drivercode"
                If Trim(BuildCondition) <> "" Then
                    strSqlQry = strSqlQry & " WHERE " & BuildCondition() & " ORDER BY vehiclemaster.vehiclecode "
                Else
                    strSqlQry = strSqlQry & " ORDER BY vehiclemaster.vehiclecode"
                End If
                con = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))

                DA = New SqlDataAdapter(strSqlQry, con)
                DA.Fill(DS, "dirmast")

                objUtils.ExportToExcel(DS, Response)
                con.Close()
            Else
                objUtils.MessageBox("Sorry , No data availabe for export to excel.", Page)
            End If
        Catch ex As Exception
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
        End Try
    End Sub

    Protected Sub Page_PreInit(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.PreInit
        Try


            If Page.IsPostBack = False Then
                Dim apid As Integer
                apid = objUser.GetAppId(Session("dbconnectionName"), CType(Session("AppName"), String))
                If apid <> 0 Then

                    Select Case apid
                        Case 1
                            Me.MasterPageFile = "~/PriceListMaster.master"
                        Case 2
                            Me.MasterPageFile = "~/RoomBlock.master"
                        Case 3
                            Me.MasterPageFile = "~/ReservationMaster.master"
                        Case 4
                            Me.MasterPageFile = "~/AccountsMaster.master"
                        Case 5
                            Me.MasterPageFile = "~/UserAdminMaster.master"
                        Case 6
                            Me.MasterPageFile = "~/WebAdminMaster.master"
                        Case 7
                            Me.MasterPageFile = "~/TransferHistoryMaster.master"
                        Case 9
                            Me.MasterPageFile = "~/FleetMaster.master"
                        Case 10
                            Me.MasterPageFile = "~/TransferMaster.master"
                        Case 11
                            Me.MasterPageFile = "~/ExcursionMaster.master"
                        Case Else
                            Me.MasterPageFile = "~/SubPageMaster.master"
                    End Select
                Else
                    Me.MasterPageFile = "~/SubPageMaster.master"
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Protected Sub gv_SearchResult_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles gv_SearchResult.SelectedIndexChanged

    End Sub

    Protected Sub gv_SearchResult_Sorting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewSortEventArgs) Handles gv_SearchResult.Sorting
        
        Session.Add("strsortexpression", e.SortExpression)
        SortGridColoumn_click()
    End Sub

    Private Sub FillGridWithOrderByValues(ByVal gridhead As String)
        'vij
        Select Case gridhead.ToString
            Case "vehiclecode"
                FillGrid("vehiclemaster.vehiclecode", "asc")
            Case "vehiclename"
                FillGrid("vehiclemaster.vehiclename", "ASC")
            Case "vehiclemakename"
                FillGrid("vehiclemakemaster.vehiclemakename", "ASC")
            Case "othcatname"
                FillGrid("othcatmast.othcatname", "ASC")
            Case "color"
                FillGrid("vehiclemaster.color", "ASC")
            Case "model"
                FillGrid("vehiclemaster.model", "ASC")
            Case "drivername"
                FillGrid("drivermaster.drivername", "")
            Case Else
                FillGrid(gridhead, "asc")
        End Select
    End Sub

#Region "Public Sub SortGridColoumn_click()"
    Public Sub SortGridColoumn_click()
        Dim DataTable As DataTable
        Dim myDS As New DataSet
        FillGrid(Session("strsortexpression"), "")

        myDS = gv_SearchResult.DataSource
        DataTable = myDS.Tables(0)
        If IsDBNull(DataTable) = False Then
            Dim dataView As DataView = DataTable.DefaultView
            Session.Add("strsortdirection", objUtils.SwapSortDirection(Session("strsortdirection")))
            dataView.Sort = Session("strsortexpression") & " " & objUtils.ConvertSortDirectionToSql(Session("strsortdirection"))
            gv_SearchResult.DataSource = dataView
            gv_SearchResult.DataBind()
        End If
    End Sub
#End Region

End Class
