
Imports CrystalDecisions.CrystalReports.Engine
Imports CrystalDecisions.CrystalReports
Imports CrystalDecisions.Shared
Imports CrystalDecisions.Web
Imports CrystalDecisions.ReportSource




Partial Class TransportModule_rptReportNew
    Inherits System.Web.UI.Page
    Dim repDeocument As New ReportDocument
    Dim rptcompanyname As String
    Dim rptreportname As String
    Dim objutils As New clsUtils
    Dim strSelectionFormula As String = ""
    Dim strReportTitle As String = ""
    Dim repfilter As String = ""
    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init
        rptcompanyname = CType(objutils.ExecuteQueryReturnSingleValuenew(Session("dbconnectionName"), "select conm from columbusmaster"), String)
        ' rptcompanyname = Session("CompanyName")
        Dim strReportName As String = ""
        ViewState.Add("Pageame", Request.QueryString("Pageame"))
        ViewState.Add("BackPageName", Request.QueryString("BackPageName"))

        If Request.QueryString("checkedrequest") = "1" Then
            repfilter = repfilter + "Request Date in Between " & Request.QueryString("fromrequest") & " and " & Request.QueryString("torequest")

        End If

        If Request.QueryString("checkedtransfer") = "1" Then
            repfilter = repfilter + " Transfer Date in Between " & Request.QueryString("fromtransfer") & " and " & Request.QueryString("totransfer")

        End If

        If CType(ViewState("BackPageName"), String) = "" Then
            'Response.Redirect("Login.aspx", False)
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", "window.close();", True)

        Else
            If CType(ViewState("Pageame"), String) = "" Then
                'Response.Redirect(CType(Session("BackPageName"), String), False)
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", "window.close();", True)
                Exit Sub
            Else
                Select Case CType(ViewState("Pageame"), String)
                    Case "TransferVoucher"
                        If Request.QueryString("transfertype") <> "" Then

                            If Request.QueryString("transfertype") = 0 Then
                                strReportName = CType(Server.MapPath("~\Report\arrivalsign.rpt"), String)

                                'strReportTitle = "Main Group Code : " & Request.QueryString("GroupCode")
                                strSelectionFormula = "{transfers_booking_header.requestid}= '" & Request.QueryString("Refcode") & "'"
                            Else
                                strReportName = CType(Server.MapPath("~\Report\trfdepartureslip.rpt"), String)
                                ' strReportTitle = "Main Group Code : " & Request.QueryString("GroupCode")
                                'strSelectionFormula = "{transfers_booking_header.requestid} = '" & Request.QueryString("Refcode") & "'"
                            End If
                        End If

                    Case "DriverReport"

                        If Request.QueryString("showsupp") = "0" Then

                            Select Case Request.QueryString("transfertype")
                                Case 0
                                    strReportName = CType(Server.MapPath("~\Report\driverwisepickupa.rpt"), String)
                                Case 1
                                    strReportName = CType(Server.MapPath("~\Report\driverwisepickupd.rpt"), String)
                                Case 2
                                    strReportName = CType(Server.MapPath("~\Report\driverwisepickups.rpt"), String)
                                Case Else
                                    strReportName = CType(Server.MapPath("~\Report\driverwisepickup.rpt"), String)
                            End Select

                            strReportTitle = "Assign Drivers-Arrival/Departure/Shifting"
                        Else
                            strReportName = CType(Server.MapPath("~\Report\driverwisepickupshowsupp.rpt"), String)
                            strReportTitle = "Assign Drivers-Arrival/Departure/Shifting"
                        End If
                        Exit Select
                    Case "Assignreport"

                       
                        strReportName = CType(Server.MapPath("~\Report\assigndriverlist.rpt"), String)
                            strReportTitle = "Assign Drivers-Arrival/Departure/Shifting"

                        Exit Select
                    Case "AirportrepReport"

                        strReportName = CType(Server.MapPath("~\Report\Airportrep.rpt"), String)
                        Exit Select

                    Case "DriverOperation"
                        strReportName = CType(Server.MapPath("~\Report\trfarrivaldriver.rpt"), String)
                        strReportTitle = "Assign Drivers-Arrival/Departure/Shifting"
                        Exit Select
                    Case "TransportRequest"
                        strReportName = CType(Server.MapPath("~\Report\transportrequest.rpt"), String)
                        strReportTitle = ""
                        Exit Select
                End Select
                If strReportName = "" Then
                    'Response.Redirect(CType(Session("BackPageName"), String), False)
                    ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", "window.close();", True)
                    Exit Sub
                Else
                    ViewState.Add("RepCalledFrom", 0)
                    btnBack.Attributes.Add("onclick", "javascript:if(confirm('Are you sure you want to close report?')==false)return false;")
                    BindReport(strReportName, strSelectionFormula, strReportTitle)
                End If

            End If
        End If
    End Sub
    Private Sub BindReport(ByVal ReportName As String, ByVal strSelectionFormula As String, ByVal strReportTitle As String)

        Dim pnames As ParameterFieldDefinitions
        Dim pname As ParameterFieldDefinition
        Dim param As New ParameterValues
        Dim paramvalue As New ParameterDiscreteValue

        Dim ConnInfo As New ConnectionInfo


        With ConnInfo
            .ServerName = Session("dbServerName")
            .DatabaseName = Session("dbDatabaseName")
            .UserID = Session("dbUserName")
            .Password = Session("dbPassword")
        End With


        repDeocument.Load(ReportName)

        Me.CRVReport.ReportSource = repDeocument
        Dim RepTbls As Tables = repDeocument.Database.Tables

        For Each RepTbl As Table In RepTbls
            Dim RepTblLogonInfo As TableLogOnInfo = RepTbl.LogOnInfo
            RepTblLogonInfo.ConnectionInfo = ConnInfo
            RepTbl.ApplyLogOnInfo(RepTblLogonInfo)
        Next

        repDeocument.SummaryInfo.ReportTitle = strReportTitle
        pnames = repDeocument.DataDefinition.ParameterFields

        If CType(ViewState("Pageame"), String) = "DriverOperation" Or CType(ViewState("Pageame"), String) = "DriverReport" Or CType(ViewState("Pageame"), String) = "AirportrepReport" Or CType(ViewState("Pageame"), String) = "TransportRequest" Then


            pname = pnames.Item("fromdate")
            paramvalue.Value = Format(CType((Request.QueryString("fromrequest")), Date), "yyyy/MM/dd")

            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("todate")
            paramvalue.Value = Format(CType((Request.QueryString("torequest")), Date), "yyyy/MM/dd")


            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("tranfromdate")
            paramvalue.Value = Format(CType((Request.QueryString("fromtransfer")), Date), "yyyy/MM/dd")


            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("trantodate")
            paramvalue.Value = Format(CType((Request.QueryString("totransfer")), Date), "yyyy/MM/dd")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("chkdate")
            paramvalue.Value = Request.QueryString("checkedrequest")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)


            pname = pnames.Item("chktransferdate")
            paramvalue.Value = Request.QueryString("checkedtransfer")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)


            pname = pnames.Item("transferid")
            paramvalue.Value = Request.QueryString("TranID")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("agentref")
            paramvalue.Value = Request.QueryString("AgentRef")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("guestname")
            paramvalue.Value = Request.QueryString("Guestname")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("hotelname")
            paramvalue.Value = Request.QueryString("HotelCode")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("flightname")
            paramvalue.Value = Request.QueryString("FlightCode")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("agentname")
            paramvalue.Value = Request.QueryString("AgentCode")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("conm")
            paramvalue.Value = rptcompanyname
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            If CType(ViewState("Pageame"), String) = "DriverReport" Then
                pname = pnames.Item("suppliercode")
                paramvalue.Value = Request.QueryString("supplier")
                param = pname.CurrentValues
                param.Add(paramvalue)
                pname.ApplyCurrentValues(param)
            End If


            If CType(ViewState("Pageame"), String) <> "TransportRequest" Then
                pname = pnames.Item("trftype")
                paramvalue.Value = Request.QueryString("transfertype")
                param = pname.CurrentValues
                param.Add(paramvalue)
                pname.ApplyCurrentValues(param)

                pname = pnames.Item("rephead")
                paramvalue.Value = strReportTitle
                param = pname.CurrentValues
                param.Add(paramvalue)
                pname.ApplyCurrentValues(param)

                pname = pnames.Item("repfilter")
                paramvalue.Value = repfilter
                param = pname.CurrentValues
                param.Add(paramvalue)
                pname.ApplyCurrentValues(param)
            End If
        End If



        If CType(ViewState("Pageame"), String) = "TransferVoucher" Then
            pname = pnames.Item("requestid")
            paramvalue.Value = Request.QueryString("Refcode")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)


        End If

        If Not Session("ColReportParams") Is Nothing Then
            Dim p As Integer
            Dim colreport As New Collection
            colreport = Session("ColReportParams")
            Dim creport As New clsReportParam
            For p = 1 To colreport.Count
                creport = colreport.Item(p)
                pname = pnames.Item(creport.rep_parametername)
                paramvalue.Value = creport.rep_parametervalue
                param = pname.CurrentValues
                param.Add(paramvalue)
                pname.ApplyCurrentValues(param)

            Next

        End If

        If CType(ViewState("Pageame"), String) = "Assignreport" Then

            pname = pnames.Item("@transfertype")
            paramvalue.Value = Request.QueryString("transfertype")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@searchbyrequestdate")
            paramvalue.Value = Request.QueryString("checkedrequest")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@fromrequestdate")
            paramvalue.Value = CType(Format(CType((Request.QueryString("fromrequest")), Date), "yyyy/MM/dd"), String)

            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@torequestdate")
            paramvalue.Value = CType(Format(CType((Request.QueryString("torequest")), Date), "yyyy/MM/dd"), String)
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@searchbytransferdate")
            paramvalue.Value = Request.QueryString("checkedtransfer")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)


            pname = pnames.Item("@fromtransferdate")
            paramvalue.Value = CType(Format(CType((Request.QueryString("fromtransfer")), Date), "yyyy/MM/dd"), String)
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@totransferdate")
            paramvalue.Value = CType(Format(CType((Request.QueryString("totransfer")), Date), "yyyy/MM/dd"), String)
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)


            pname = pnames.Item("@requestid")
            paramvalue.Value = Request.QueryString("TranID")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@hotelcode")
            paramvalue.Value = IIf(Request.QueryString("HotelCode") = "[Select]", " ", Request.QueryString("HotelCode"))
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)


            pname = pnames.Item("@agentcode")
            paramvalue.Value = IIf(Request.QueryString("AgentCode") = "[Select]", " ", Request.QueryString("AgentCode"))
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@flightcode")
            paramvalue.Value = IIf(Request.QueryString("FlightCode") = "[Select]", " ", Request.QueryString("FlightCode"))
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@guestname")
            paramvalue.Value = Request.QueryString("Guestname")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@clientref")
            paramvalue.Value = Request.QueryString("AgentRef")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("@supplier")
            paramvalue.Value = Session("Supplier")
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("conm")
            paramvalue.Value = rptcompanyname
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("rephead")
            paramvalue.Value = strReportTitle
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)

            pname = pnames.Item("repfilter")
            paramvalue.Value = repfilter
            param = pname.CurrentValues
            param.Add(paramvalue)
            pname.ApplyCurrentValues(param)



        End If
        Me.CRVReport.ReportSource = repDeocument
        If strSelectionFormula <> "" Then
            CRVReport.SelectionFormula = strSelectionFormula
        End If
        Session.Add("ReportSource", repDeocument)
        Me.CRVReport.DataBind()
        CRVReport.HasCrystalLogo = False
        Try


        Catch ex As Exception

        End Try


        ' CRVReport.HasToggleGroupTreeButton = False
    End Sub

    Protected Sub btnBack_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnBack.Click
        If CType(ViewState("BackPageName"), String) = "" Then
            'Response.Redirect("MainPage.aspx", False)
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", "window.close();", True)
            Exit Sub
        Else
            'Session("ColReportParams") = Nothing
            'Response.Redirect(CType(Session("BackPageName"), String), False)
            ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", "window.close();", True)
        End If
    End Sub

    Protected Sub Page_Unload(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Unload
        '        If Page.IsPostBack = True Then
        If ViewState("RepCalledFrom") <> 1 Then
            repDeocument.Close()
            repDeocument.Dispose()
            ' Session("ColReportParams") = Nothing
        End If
        'End If
    End Sub

    Protected Sub btnPrint_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnPrint.Click
        Session.Add("ReportSource", repDeocument)
        ViewState.Add("RepCalledFrom", 1)
        Dim strpop As String = ""
        strpop = "window.open('RptPrintPage.aspx','PopUpGuestDetails','width=1010,height=650 left=0,top=0 scrollbars=yes,status=yes');"
        ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "popup", strpop, True)
    End Sub


End Class