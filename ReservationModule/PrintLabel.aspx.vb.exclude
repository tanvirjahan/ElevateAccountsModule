Imports System.IO
Imports System.Data
Imports System.Data.SqlClient
Imports ClosedXML.Excel
Imports System.Collections.Generic
Imports System.Net
Imports iTextSharp.text
Imports iTextSharp.text.pdf

Partial Class PrintLabel
    Inherits System.Web.UI.Page

#Region "Global Declaration"
    Dim objUser As New clsUser
    Dim objUtils As New clsUtils
    Dim mySqlConn As SqlConnection
    Dim mySqlCmd As SqlCommand
    Dim myDataAdapter As SqlDataAdapter
    Dim mySqlReader As SqlDataReader
    Dim strSqlQry As String
    Dim document As New XLWorkbook
    Dim myds As New DataSet
#End Region

    <System.Web.Script.Services.ScriptMethod()> _
<System.Web.Services.WebMethod()> _
    Public Shared Function GetCountrys(ByVal prefixText As String) As List(Of String)
        Dim strSqlQry As String = ""

        Dim myDS As New DataSet
        Dim countrynames As New List(Of String)
        Try


            strSqlQry = "select ctryname,ctrycode from ctrymast  where  active=1 and  ctryname like  '" & Trim(prefixText) & "%'"

            Dim SqlConn As New SqlConnection
            Dim myDataAdapter As New SqlDataAdapter
            ' SqlConn = clsDBConnect.dbConnectionnew(objclsConnectionName.ConnectionName)
            SqlConn = clsDBConnect.dbConnectionnew("strDBConnection")
            'Open connection
            myDataAdapter = New SqlDataAdapter(strSqlQry, SqlConn)
            myDataAdapter.Fill(myDS)
            If myDS.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To myDS.Tables(0).Rows.Count - 1
                    countrynames.Add(AjaxControlToolkit.AutoCompleteExtender.CreateAutoCompleteItem(myDS.Tables(0).Rows(i)("ctryname").ToString(), myDS.Tables(0).Rows(i)("ctrycode").ToString()))

                Next
            End If
            Return countrynames
        Catch ex As Exception
            Return countrynames
        End Try
    End Function
    <System.Web.Script.Services.ScriptMethod()> _
<System.Web.Services.WebMethod()> _
    Public Shared Function GetHotelcitys(ByVal prefixText As String) As List(Of String)
        Dim strSqlQry As String = ""

        Dim myDS As New DataSet
        Dim citynames As New List(Of String)
        Try
            strSqlQry = "select cityname,citycode from citymast  where  active=1 and  cityname like  '" & Trim(prefixText) & "%'"
            Dim SqlConn As New SqlConnection
            Dim myDataAdapter As New SqlDataAdapter
            ' SqlConn = clsDBConnect.dbConnectionnew(objclsConnectionName.ConnectionName)
            SqlConn = clsDBConnect.dbConnectionnew("strDBConnection")
            'Open connection
            myDataAdapter = New SqlDataAdapter(strSqlQry, SqlConn)
            myDataAdapter.Fill(myDS)
            If myDS.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To myDS.Tables(0).Rows.Count - 1
                    citynames.Add(AjaxControlToolkit.AutoCompleteExtender.CreateAutoCompleteItem(myDS.Tables(0).Rows(i)("cityname").ToString(), myDS.Tables(0).Rows(i)("citycode").ToString()))
                Next
            End If
            Return citynames
        Catch ex As Exception
            Return citynames
        End Try
    End Function
    <System.Web.Script.Services.ScriptMethod()> _
<System.Web.Services.WebMethod()> _
    Public Shared Function GetFlightDetails(ByVal prefixText As String) As List(Of String)
        Dim strSqlQry As String = ""

        Dim myDS As New DataSet
        Dim flightnames As New List(Of String)
        Try
            strSqlQry = "select flightcode,flightcode from flightmast  where  active=1 and  flightcode like  '" & Trim(prefixText) & "%'"
            Dim SqlConn As New SqlConnection
            Dim myDataAdapter As New SqlDataAdapter
            ' SqlConn = clsDBConnect.dbConnectionnew(objclsConnectionName.ConnectionName)
            SqlConn = clsDBConnect.dbConnectionnew("strDBConnection")
            'Open connection
            myDataAdapter = New SqlDataAdapter(strSqlQry, SqlConn)
            myDataAdapter.Fill(myDS)
            If myDS.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To myDS.Tables(0).Rows.Count - 1
                    flightnames.Add(AjaxControlToolkit.AutoCompleteExtender.CreateAutoCompleteItem(myDS.Tables(0).Rows(i)("flightcode").ToString(), myDS.Tables(0).Rows(i)("flightcode").ToString()))
                Next
            End If
            Return flightnames
        Catch ex As Exception
            Return flightnames
        End Try
    End Function
    <System.Web.Script.Services.ScriptMethod()> _
<System.Web.Services.WebMethod()> _
    Public Shared Function GetAgents(ByVal prefixText As String) As List(Of String)
        Dim strSqlQry As String = ""

        Dim myDS As New DataSet
        Dim agentnames As New List(Of String)
        Try
            strSqlQry = "select agentname,agentcode from agentmast  where  active=1 and  agentname like  '" & Trim(prefixText) & "%'"
            Dim SqlConn As New SqlConnection
            Dim myDataAdapter As New SqlDataAdapter
            ' SqlConn = clsDBConnect.dbConnectionnew(objclsConnectionName.ConnectionName)
            SqlConn = clsDBConnect.dbConnectionnew("strDBConnection")
            'Open connection
            myDataAdapter = New SqlDataAdapter(strSqlQry, SqlConn)
            myDataAdapter.Fill(myDS)
            If myDS.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To myDS.Tables(0).Rows.Count - 1
                    agentnames.Add(AjaxControlToolkit.AutoCompleteExtender.CreateAutoCompleteItem(myDS.Tables(0).Rows(i)("agentname").ToString(), myDS.Tables(0).Rows(i)("agentcode").ToString()))
                Next
            End If
            Return agentnames
        Catch ex As Exception
            Return agentnames
        End Try
    End Function

    <System.Web.Script.Services.ScriptMethod()> _
<System.Web.Services.WebMethod()> _
    Public Shared Function GetHotels(ByVal prefixText As String) As List(Of String)
        Dim strSqlQry As String = ""

        Dim myDS As New DataSet
        Dim hotelnames As New List(Of String)
        Try
            strSqlQry = "select partyname,partycode from partymast  where  active=1 and  partyname like  '" & Trim(prefixText) & "%' and sptypecode = (select option_selected  from reservation_parameters where param_id=458)"
            Dim SqlConn As New SqlConnection
            Dim myDataAdapter As New SqlDataAdapter
            ' SqlConn = clsDBConnect.dbConnectionnew(objclsConnectionName.ConnectionName)
            SqlConn = clsDBConnect.dbConnectionnew("strDBConnection")
            'Open connection
            myDataAdapter = New SqlDataAdapter(strSqlQry, SqlConn)
            myDataAdapter.Fill(myDS)
            If myDS.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To myDS.Tables(0).Rows.Count - 1
                    hotelnames.Add(AjaxControlToolkit.AutoCompleteExtender.CreateAutoCompleteItem(myDS.Tables(0).Rows(i)("partyname").ToString(), myDS.Tables(0).Rows(i)("partycode").ToString()))
                Next
            End If
            Return hotelnames
        Catch ex As Exception
            Return hotelnames
        End Try
    End Function
    <System.Web.Script.Services.ScriptMethod()> _
 <System.Web.Services.WebMethod()> _
    Public Shared Function GetCountryGroups(ByVal prefixText As String) As List(Of String)
        Dim strSqlQry As String = ""

        Dim myDS As New DataSet
        Dim countrygroupnames As New List(Of String)
        Try


            strSqlQry = "select countrygroupname,countrygroupcode from countrygroup  where  active=1 and  countrygroupname like  '" & Trim(prefixText) & "%'"

            Dim SqlConn As New SqlConnection
            Dim myDataAdapter As New SqlDataAdapter
            ' SqlConn = clsDBConnect.dbConnectionnew(objclsConnectionName.ConnectionName)
            SqlConn = clsDBConnect.dbConnectionnew("strDBConnection")
            'Open connection
            myDataAdapter = New SqlDataAdapter(strSqlQry, SqlConn)
            myDataAdapter.Fill(myDS)
            If myDS.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To myDS.Tables(0).Rows.Count - 1
                    countrygroupnames.Add(AjaxControlToolkit.AutoCompleteExtender.CreateAutoCompleteItem(myDS.Tables(0).Rows(i)("countrygroupname").ToString(), myDS.Tables(0).Rows(i)("countrygroupcode").ToString()))

                Next




            End If
            Return countrygroupnames
        Catch ex As Exception
            Return countrygroupnames
        End Try
    End Function

#Region "Protected Sub Page_Load(sender As Object, e As System.EventArgs) Handles Me.Load"
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If IsPostBack = False Then
            Try
                txtFromDate.Text = Date.Now
                If CType(Session("GlobalUserName"), String) = "" Or CType(Session("Userpwd"), String) = Nothing Then
                    Response.Redirect("~/Login.aspx", False)
                    Exit Sub
                End If
                Dim strappid As String = ""
                Dim strappname As String = ""

                Dim AppName As HiddenField = CType(Master.FindControl("hdnAppName"), HiddenField)
                Dim AppId As HiddenField = CType(Master.FindControl("hdnAppId"), HiddenField)

                If AppId.Value Is Nothing = False Then
                    strappid = AppId.Value
                End If
                strappname = objUser.GetAppName(Session("dbconnectionName"), strappid)


                objUser.CheckUserRight(Session("dbconnectionName"), CType(Session("GlobalUserName"), String), CType(Session("Userpwd"), String), _
                               CType(strappname, String), "ReservationModule\PrintLabel.aspx", btnAddNew, btnExportToExcel, _
                               btnprint, gvSearch:=gvSearchResult)

                objUtils.FillDropDownListWithValuenew(Session("dbconnectionName"), ddldivisions, "division_master_des", "division_master_code", "select division_master_code,division_master_des from division_master  order by division_master_code", True)
                Dim showgroup As String = objUtils.ExecuteQueryReturnStringValuenew(Session("dbconnectionName"), "select option_selected  from reservation_parameters(nolock) where param_id=3001")
                ddldivisions.Items.RemoveAt(ddldivisions.Items.Count - 1)
                ddldivisions.Items.Add(New System.Web.UI.WebControls.ListItem("All", "-1"))
                ddldivisions.SelectedIndex = ddldivisions.Items.Count - 1
                ' chkflightonly.Checked = True
                chkshiftingonly.Checked = True

            Catch ex As Exception
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('" & "Error Description " + ex.Message.Replace("'", " ") & "' );", True)
                objUtils.WritErrorLog("rptTransfersArrivalReportSearch.aspx", Server.MapPath("ErrorLog.txt"), ex.Message.ToString, Session("GlobalUserName"))
            End Try
        End If
    End Sub
#End Region

#Region "Protected Sub btnLoadReport_Click(sender As Object, e As System.EventArgs) Handles btnLoadReport.Click"
    Protected Sub btnLoadReport_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnLoadReport.Click
        mySqlConn = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))           'connection open
        mySqlCmd = New SqlCommand("sp_rep_arrival_print_label", mySqlConn)
        mySqlCmd.CommandType = CommandType.StoredProcedure
        mySqlCmd.Parameters.Add(New SqlParameter("@dateofarrival", SqlDbType.VarChar, 20)).Value = Convert.ToDateTime(txtFromDate.Text).ToString("yyyy/MM/dd")
        mySqlCmd.Parameters.Add(New SqlParameter("@agent", SqlDbType.VarChar, 100)).Value = CType(IIf(TxtAgentCode.Text.Trim <> "", TxtAgentCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@countrygroup", SqlDbType.VarChar, 20)).Value = CType(IIf(TxtSectorCode.Text.Trim <> "", TxtSectorCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@country", SqlDbType.VarChar, 100)).Value = CType(IIf(TxtCtryCode.Text.Trim <> "", TxtCtryCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@city", SqlDbType.VarChar, 20)).Value = CType(IIf(TxtCityCode.Text.Trim <> "", TxtCityCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@party", SqlDbType.VarChar, 100)).Value = CType(IIf(TxtHotelCode.Text.Trim <> "", TxtHotelCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@flightcode", SqlDbType.VarChar, 20)).Value = CType(IIf(TxtFlightCode.Text.Trim <> "", TxtFlightCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@groupby", SqlDbType.VarChar, 100)).Value = CType(GroupBy.SelectedValue, Integer)
        mySqlCmd.Parameters.Add(New SqlParameter("@flightonly", SqlDbType.VarChar, 20)).Value = IIf((chkflightonly.Checked), "1", "0")
        mySqlCmd.Parameters.Add(New SqlParameter("@shiftonly", SqlDbType.VarChar, 100)).Value = IIf((chkshiftingonly.Checked), "0", "0")
        mySqlCmd.Parameters.Add(New SqlParameter("@divcode", SqlDbType.VarChar, 20)).Value = CType(IIf(ddldivisions.SelectedValue = -1, "", ddldivisions.SelectedValue), String)
        myDataAdapter = New SqlDataAdapter(mySqlCmd)
        myDataAdapter.Fill(myds)
      
        If Not myds Is Nothing Then
            If myds.Tables.Count > 0 Then
                gv_SearchResult.DataSource = myds.Tables(0)
                gv_SearchResult.DataBind()
            End If
        End If
    End Sub
    Protected Sub btnLoadReportOld_Click(ByVal sender As Object, ByVal e As System.EventArgs) 'Handles btnLoadReport.Click
        mySqlConn = clsDBConnect.dbConnectionnew(Session("dbconnectionName"))           'connection open
        mySqlCmd = New SqlCommand("sp_rep_arrival_print_label", mySqlConn)
        mySqlCmd.CommandType = CommandType.StoredProcedure
        mySqlCmd.Parameters.Add(New SqlParameter("@dateofarrival", SqlDbType.VarChar, 20)).Value = Convert.ToDateTime(txtFromDate.Text).ToString("yyyy/MM/dd")
        mySqlCmd.Parameters.Add(New SqlParameter("@agent", SqlDbType.VarChar, 100)).Value = CType(IIf(TxtAgentCode.Text.Trim <> "", TxtAgentCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@countrygroup", SqlDbType.VarChar, 20)).Value = CType(IIf(TxtSectorCode.Text.Trim <> "", TxtSectorCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@country", SqlDbType.VarChar, 100)).Value = CType(IIf(TxtCtryCode.Text.Trim <> "", TxtCtryCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@city", SqlDbType.VarChar, 20)).Value = CType(IIf(TxtCityCode.Text.Trim <> "", TxtCityCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@party", SqlDbType.VarChar, 100)).Value = CType(IIf(TxtHotelCode.Text.Trim <> "", TxtHotelCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@flightcode", SqlDbType.VarChar, 20)).Value = CType(IIf(TxtFlightCode.Text.Trim <> "", TxtFlightCode.Text.Trim, ""), String)
        mySqlCmd.Parameters.Add(New SqlParameter("@groupby", SqlDbType.VarChar, 100)).Value = CType(GroupBy.SelectedValue, Integer)
        mySqlCmd.Parameters.Add(New SqlParameter("@flightonly", SqlDbType.VarChar, 20)).Value = IIf((chkflightonly.Checked), "1", "0")
        mySqlCmd.Parameters.Add(New SqlParameter("@shiftonly", SqlDbType.VarChar, 100)).Value = IIf((chkshiftingonly.Checked), "1", "0")
        mySqlCmd.Parameters.Add(New SqlParameter("@divcode", SqlDbType.VarChar, 20)).Value = CType(IIf(ddldivisions.SelectedValue = -1, "", ddldivisions.SelectedValue), String)
        myDataAdapter = New SqlDataAdapter(mySqlCmd)
        myDataAdapter.Fill(myds)
        Dim trow As Integer = 3
        Dim wb As New XLWorkbook

        Dim FolderPath As String = "..\ExcelTemplates\"
        Dim FileName As String = "Arrival.xlsx"
        Dim FilePath As String = Server.MapPath(FolderPath + FileName)
        Dim RandomCls As New Random()
        Dim RandomNo As String = RandomCls.Next(100000, 9999999).ToString

        Dim FileNameNew As String = "Arrivals_" & Now.Year & Now.Month & Now.Day & Now.Hour & Now.Minute & Now.Second & Now.Millisecond & ".xlsx"
        document = New XLWorkbook
        Dim ws As IXLWorksheet = wb.Worksheets.Add("ArrivalSheet")
        ws.Style.Font.FontName = "Calibri"



        Dim header As IXLRange
        header = ws.Range("A2:R2")
        header.Style.Font.SetBold()
        header.Style.Fill.SetBackgroundColor(XLColor.FromHtml("#e2efda"))
        header.Style.Border.SetBottomBorder(XLBorderStyleValues.Thin)
        header.Style.Border.SetTopBorder(XLBorderStyleValues.Thin)
        header.Merge()
        header.Style.Font.FontSize = 16
        Dim headertext As Object
        headertext = ws.Ranges("e2:h2")
        headertext.Style.Font.SetBold()
        headertext.Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Center)
        headertext.Style.Alignment.SetVertical(XLAlignmentVerticalValues.Center)
        headertext.Style.Font.SetBold()
        headertext.Style.Font.FontSize = 16
        headertext.Style.Border.SetBottomBorder(XLBorderStyleValues.Thin)
        headertext.Style.Border.SetTopBorder(XLBorderStyleValues.Thin)
        Dim range1 As IXLRange
        range1 = ws.Range("e2:I2")
        range1.Style.Alignment.SetVertical(XLAlignmentVerticalValues.Center)
        range1.Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Center)
        range1.Merge()
        If ddldivisions.SelectedValue = "-1" Then
            range1.Value = "Elevate Tourism" 'CType(Session("CompanyName"), String)
        Else
            range1.Value = ddldivisions.SelectedItem.Text
        End If

        range1.Style.Border.SetBottomBorder(XLBorderStyleValues.Thin)
        range1.Style.Border.SetTopBorder(XLBorderStyleValues.Thin)




        Dim header2 As IXLRange
        header2 = ws.Range("A3:R3")
        header2.Style.Font.SetBold()
        header2.Style.Fill.SetBackgroundColor(XLColor.FromHtml("#FFE5CC"))
        header2.Merge()
        header2.Style.Font.FontSize = 14
        Dim headertext2 As Object
        headertext2 = ws.Ranges("e3:h3")
        headertext2.Style.Font.SetBold()
        headertext2.Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Center)
        headertext2.Style.Alignment.SetVertical(XLAlignmentVerticalValues.Center)
        Dim range2 As IXLRange
        range2 = ws.Range("e3:h3")
        Dim multiline As Object
        multiline = String.Concat("Arrival" + " List for Date:    " + txtFromDate.Text)
        range2.Cell(1, 1).Value = multiline
        range2.Style.Alignment.SetVertical(XLAlignmentVerticalValues.Center)
        range2.Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Center)
        range2.Merge()

        ws.Range(3, 1, 3, 18).Style.Border.SetBottomBorder(XLBorderStyleValues.Thin)
        ws.Range(3, 1, 3, 18).Style.Border.SetTopBorder(XLBorderStyleValues.Thin)
        Dim repfilter As New StringBuilder

        ws.Cell(4, 1).Value = repfilter
        If TxtSectorName.Text <> "" Then
            ws.Cell(4, 1).Value = repfilter.Append("Country Group: " & TxtSectorName.Text & "")
        End If
        If TxtCtryName.Text <> "" Then
            ws.Cell(4, 1).Value = repfilter.Append("  Airport : " & TxtCtryName.Text & "")
        End If
        If TxtAgentName.Text <> "" Then

            ws.Cell(4, 1).Value = repfilter.Append("  Agent : " & TxtAgentName.Text & "")
        End If
        If TxtHotelName.Text <> "" Then

            ws.Cell(4, 1).Value = repfilter.Append("  Hotel : " & TxtHotelName.Text & "")
        End If
        If TxtCityName.Text <> "" Then

            ws.Cell(4, 1).Value = repfilter.Append("  Hotel City: " & TxtCityName.Text & "")
        End If
        If TxtFlightName.Text <> "" Then
            ws.Cell(4, 1).Value = repfilter.Append(" Flight :  " & TxtFlightName.Text & "")
        End If
        ws.Cell(4, 1).Value = repfilter.Append(" , Group By:  " & GroupBy.SelectedItem.Text & "  , Division:  " & ddldivisions.SelectedItem.Text & "")
        ws.Range(4, 1, 4, 18).Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Left)

        trow = 5


        ws.Column("C").Width = 20
        ws.Column("D").Width = 30
        ws.Column("E").Width = 15
        ws.Column("F").Width = 30
        ws.Column("G").Width = 25
        ws.Column("H").Width = 7
        ws.Column("I").Width = 15
        ws.Column("J").Width = 10
        ws.Column("K").Width = 10
        ws.Column("L").Width = 15
        ws.Column("M").Width = 15
        ws.Column("N").Width = 11
        ws.Column("O").Width = 11
        ws.Column("P").Width = 15
        ws.Column("Q").Width = 15
        ws.Column("R").Width = 25
        'ws.Column("S").Width = 15
        'ws.Column("t").Width = 25


        Dim title = ws.Range(trow, 1, trow, 18)

        Dim bookingtitle = ws.Range(trow, 1, trow, 18).Style.Font.SetBold()
        ws.Range(trow, 1, trow, 18).Style.Border.SetBottomBorder(XLBorderStyleValues.Thin)
        ws.Range(trow, 1, trow, 18).Style.Border.SetTopBorder(XLBorderStyleValues.Thin)
        bookingtitle.Alignment.WrapText = True
        'ws.Cell(trow, 1).Value = "Flight No."
        'ws.Cell(trow, 2).Value = "Flight Time"
        'ws.Cell(trow, 3).Value = "Pick Up From"
        'ws.Cell(trow, 4).Value = "Drop Off To"
        'ws.Cell(trow, 5).Value = "Guest Name"
        'ws.Cell(trow, 6).Value = "Adults"
        'ws.Cell(trow, 7).Value = "Children"
        'ws.Cell(trow, 8).Value = "Child Ages"
        'ws.Cell(trow, 9).Value = "Total"
        'ws.Cell(trow, 10).Value = "Booked Vehicle"
        'ws.Cell(trow, 11).Value = "Driver/Supplier"
        'ws.Cell(trow, 12).Value = "Contact No."
        'ws.Cell(trow, 13).Value = "Assigned Vehicle"
        'ws.Cell(trow, 14).Value = "Request ID"
        'ws.Cell(trow, 15).Value = "Transfer Date"
        'ws.Cell(trow, 16).Value = "Agent Name"
        'ws.Cell(trow, 17).Value = "Agency Ref."
        'ws.Cell(trow, 18).Value = "Nights"
        'ws.Cell(trow, 19).Value = "Conf. No."
        'ws.Cell(trow, 20).Value = "Remarks"
        'ws.Cell(trow, 21).Value = "Room Details"

        ws.Cell(trow, 1).Value = "Flight No."
        ws.Cell(trow, 2).Value = "Flight Time"
        ws.Cell(trow, 3).Value = "Pick Up From"
        ws.Cell(trow, 4).Value = "Drop Off To"
        ws.Cell(trow, 5).Value = "Request ID"
        ws.Cell(trow, 6).Value = "Guest Name"
        ws.Cell(trow, 7).Value = "Room Details"
        ws.Cell(trow, 8).Value = "Total Pax"
        ws.Cell(trow, 9).Value = "Departure Date"
        ws.Cell(trow, 10).Value = "Hotel Check-In Date"
        ws.Cell(trow, 11).Value = "Hotel Check-Out Date"
        ws.Cell(trow, 12).Value = "No of Nights"
        '   ws.Cell(trow, 11).Value = "Agency Ref."
        ws.Cell(trow, 13).Value = "Booked Vehicle"
        ws.Cell(trow, 14).Value = "Assigned Vehicle"
        ws.Cell(trow, 15).Value = "Driver/Supplier"
        ws.Cell(trow, 16).Value = "Meet & Assist"
        ws.Cell(trow, 17).Value = "Operation Status"
        ws.Cell(trow, 18).Value = "Remarks"

        'ws.Cell(trow, 6).Value = "Adults"
        'ws.Cell(trow, 7).Value = "Children"
        'ws.Cell(trow, 8).Value = "Child Ages"
        'ws.Cell(trow, 15).Value = "Transfer Date"
        'ws.Cell(trow, 12).Value = "Contact No."
        'ws.Cell(trow, 16).Value = "Agent Name"
        'ws.Cell(trow, 19).Value = "Conf. No."




        ws.Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Left)
        ws.Style.Alignment.SetVertical(XLAlignmentVerticalValues.Center)
        ws.Range(trow, 1, trow, 18).Style.Border.SetLeftBorder(XLBorderStyleValues.Thin)
        ws.Range(trow, 1, trow, 18).Style.Border.SetRightBorder(XLBorderStyleValues.Thin)
        ws.Range(trow, 1, trow, 18).Style.Border.SetBottomBorder(XLBorderStyleValues.Thin)



        trow = trow + 1
        If myds.Tables(0).Rows.Count >= 0 Then
            For Each bookingdetail In myds.Tables(0).Rows
                title = ws.Range(++trow, 1, trow, 18)
                title.Style.Alignment.WrapText = True

                ws.Cell(trow, 1).Value = bookingdetail("flightcode")
                ws.Cell(trow, 2).Value = bookingdetail("flighttime")
                ws.Cell(trow, 3).Value = bookingdetail("pickupname")


                If IsDBNull(bookingdetail("confno")) Then
                    bookingdetail("confno") = ""
                End If

                If bookingdetail("confno") = "" Then
                    ws.Cell(trow, 4).Value = bookingdetail("dropoffname")
                Else
                    ws.Cell(trow, 4).Value = bookingdetail("dropoffname") & "- Conf No:" & bookingdetail("confno")
                End If

                ws.Cell(trow, 5).Value = bookingdetail("requestid")
                ws.Cell(trow, 6).Value = bookingdetail("guestname")
                ws.Cell(trow, 7).Value = bookingdetail("roomdetails")
                ws.Cell(trow, 8).Value = bookingdetail("adults") + bookingdetail("child")
                ws.Cell(trow, 9).Value = (bookingdetail("DepartureDate"))
                ws.Cell(trow, 10).Value = (bookingdetail("Checkin1"))
                ws.Cell(trow, 11).Value = (bookingdetail("Checkout1"))
                ws.Cell(trow, 12).Value = bookingdetail("nights")
                '   ws.Cell(trow, 11).Value = bookingdetail("agentref")
                ws.Cell(trow, 13).Value = bookingdetail("bookedvehicle")
                ws.Cell(trow, 14).Value = bookingdetail("assignedvehicle")
                ws.Cell(trow, 15).Value = bookingdetail("driversupplier")
                ws.Cell(trow, 16).Value = bookingdetail("airportmeet")
                ws.Cell(trow, 17).Value = bookingdetail("assign_status")
                ws.Cell(trow, 18).Value = bookingdetail("remarks")
                ' ws.Column("U").Width = 30

                'ws.Cell(trow, 6).Value = bookingdetail("adults")
                'ws.Cell(trow, 7).Value = bookingdetail("child")
                'ws.Cell(trow, 15).Value = (CType(bookingdetail("transferdate"), Date))
                'ws.Cell(trow, 8).Value = bookingdetail("childages")
                'ws.Cell(trow, 12).Value = bookingdetail("drivertel")
                'ws.Cell(trow, 16).Value = bookingdetail("agentname")
                'ws.Cell(trow, 19).Value = bookingdetail("confno")



                'ws.Cell(trow, 1).Value = bookingdetail("flightcode")
                'ws.Cell(trow, 2).Value = bookingdetail("flighttime")
                'ws.Cell(trow, 3).Value = bookingdetail("pickupname")
                'ws.Cell(trow, 4).Value = bookingdetail("dropoffname")
                'ws.Cell(trow, 5).Value = bookingdetail("guestname")
                'ws.Cell(trow, 6).Value = bookingdetail("adults")
                'ws.Cell(trow, 7).Value = bookingdetail("child")
                'ws.Cell(trow, 8).Value = bookingdetail("childages")
                'ws.Cell(trow, 9).Value = bookingdetail("adults") + bookingdetail("child")
                'ws.Cell(trow, 10).Value = bookingdetail("bookedvehicle")
                'ws.Cell(trow, 11).Value = bookingdetail("driversupplier")
                'ws.Cell(trow, 12).Value = bookingdetail("drivertel")
                'ws.Cell(trow, 13).Value = bookingdetail("assignedvehicle")
                'ws.Cell(trow, 14).Value = bookingdetail("requestid")
                'ws.Cell(trow, 15).Value = (CType(bookingdetail("transferdate"), Date))
                'ws.Cell(trow, 16).Value = bookingdetail("agentname")
                'ws.Cell(trow, 17).Value = bookingdetail("agentref")
                'ws.Cell(trow, 18).Value = bookingdetail("nights")
                'ws.Cell(trow, 19).Value = bookingdetail("confno")
                'ws.Cell(trow, 20).Value = bookingdetail("remarks")
                'ws.Column("U").Width = 30
                'ws.Cell(trow, 21).Value = bookingdetail("roomdetails")
                ws.Style.Alignment.SetHorizontal(XLAlignmentHorizontalValues.Left)
                ws.Style.Alignment.SetVertical(XLAlignmentVerticalValues.Center)
                ws.Range(trow, 1, trow, 18).Style.Border.SetLeftBorder(XLBorderStyleValues.Thin)
                ws.Range(trow, 1, trow, 18).Style.Border.SetRightBorder(XLBorderStyleValues.Thin)
                ws.Range(trow, 1, trow, 18).Style.Border.SetBottomBorder(XLBorderStyleValues.Thin)

                trow = trow + 1
            Next

        End If
        Try
            Using MyMemoryStream As New MemoryStream()
                wb.SaveAs(MyMemoryStream)
                wb.Dispose()
                Response.Clear()
                Response.Buffer = True
                Response.AddHeader("content-disposition", "attachment;filename=" + FileNameNew)
                Response.AddHeader("Content-Length", MyMemoryStream.Length.ToString())
                Response.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"

                MyMemoryStream.WriteTo(Response.OutputStream)
                Response.Cookies.Add(New HttpCookie("Downloaded", "True"))
                Response.Flush()
                HttpContext.Current.ApplicationInstance.CompleteRequest()

            End Using
        Catch ex As Exception

        End Try








    End Sub
#End Region



    Protected Sub chkSelect_CheckedChanged(sender As Object, e As System.EventArgs)

    End Sub

    Protected Sub chkSelectAll_CheckedChanged(sender As Object, e As System.EventArgs)

        Dim chkSelectAll As CheckBox = CType(sender, CheckBox)

        For Each row As GridViewRow In gv_SearchResult.Rows
            Dim chkSelectCtrl As CheckBox = DirectCast(row.FindControl("chkSelect"), CheckBox)
            If chkSelectAll.Checked = True Then
                chkSelectCtrl.Checked = True
            Else
                chkSelectCtrl.Checked = False
            End If
        Next
    End Sub

    Protected Sub btnLabelPrint_Click(sender As Object, e As System.EventArgs) Handles btnLabelPrint.Click

        Try


            If gv_SearchResult.Rows.Count = 0 Then
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('No record found.' );", True)
                Exit Sub
            End If
            Dim strFlag As String = ""
            For Each row As GridViewRow In gv_SearchResult.Rows
                Dim chkSelectCtrl As CheckBox = DirectCast(row.FindControl("chkSelect"), CheckBox)
                If chkSelectCtrl.Checked = True Then
                    strFlag = "1"
                End If
            Next
            If strFlag = "" Then
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Please select atleast one item.' );", True)
                Exit Sub
            End If

            Dim NormalFont As Font = FontFactory.GetFont("Arial", 9, Font.NORMAL, BaseColor.BLACK)
            Dim NormalFontBold As Font = FontFactory.GetFont("Arial", 9, Font.NORMAL, BaseColor.BLACK)
            Dim NormalFontBoldNew As Font = FontFactory.GetFont("Arial", 10, Font.BOLD, BaseColor.BLACK)
            Dim NormalFontBoldRed As Font = FontFactory.GetFont("Arial", 11, Font.BOLD, BaseColor.RED)
            Dim TitleFontBoldUnderLine As Font = FontFactory.GetFont("Arial", 12, Font.BOLD Or Font.UNDERLINE, BaseColor.BLACK)
            Dim titleColor As BaseColor = New BaseColor(214, 214, 214)


            Dim Table1 As DataTable
            Table1 = New DataTable("TableName")

            Dim column1 As DataColumn = New DataColumn("GuestName")
            column1.DataType = System.Type.GetType("System.String")

            Dim column2 As DataColumn = New DataColumn("DropOff")
            column2.DataType = System.Type.GetType("System.String")

            Dim column3 As DataColumn = New DataColumn("Guide")
            column3.DataType = System.Type.GetType("System.String")

            Dim column4 As DataColumn = New DataColumn("ContactNo")
            column4.DataType = System.Type.GetType("System.String")

            Dim column5 As DataColumn = New DataColumn("MeetingDate")
            column5.DataType = System.Type.GetType("System.String")


            Dim column6 As DataColumn = New DataColumn("Flight")
            column6.DataType = System.Type.GetType("System.String")

            Dim column7 As DataColumn = New DataColumn("Language")
            column7.DataType = System.Type.GetType("System.String")

            Table1.Columns.Add(column1)
            Table1.Columns.Add(column2)
            Table1.Columns.Add(column3)
            Table1.Columns.Add(column4)
            Table1.Columns.Add(column5)
            Table1.Columns.Add(column6)
            Table1.Columns.Add(column7)






            For Each row As GridViewRow In gv_SearchResult.Rows
                Dim chkSelectCtrl As CheckBox = DirectCast(row.FindControl("chkSelect"), CheckBox)
                If chkSelectCtrl.Checked = True Then
                    Dim txtGuestName As TextBox = DirectCast(row.FindControl("txtGuestName"), TextBox)
                    Dim txtDropOff As TextBox = DirectCast(row.FindControl("txtDropOff"), TextBox)
                    Dim txtGuide As TextBox = DirectCast(row.FindControl("txtGuide"), TextBox)
                    Dim txtContactNo As TextBox = DirectCast(row.FindControl("txtContactNo"), TextBox)
                    Dim txtMeetingDate As TextBox = DirectCast(row.FindControl("txtMeetingDate"), TextBox)
                    Dim txtFlight As TextBox = DirectCast(row.FindControl("txtFlight"), TextBox)

                    Dim rdblLanguage As RadioButtonList = CType(row.FindControl("rdblLanguage"), RadioButtonList)
                    Dim dRow As DataRow
                    dRow = Table1.NewRow()

                    dRow("GuestName") = txtGuestName.Text
                    dRow("DropOff") = txtDropOff.Text
                    dRow("Guide") = txtGuide.Text

                    dRow("ContactNo") = txtContactNo.Text
                    dRow("MeetingDate") = txtMeetingDate.Text
                    dRow("Flight") = txtFlight.Text
                    dRow("Language") = rdblLanguage.SelectedValue
                    Table1.Rows.Add(dRow)

                End If
            Next


            Dim fontLoc As String = "c:\windows\fonts\arialuni.ttf"
            Dim bf As BaseFont = BaseFont.CreateFont(fontLoc, BaseFont.IDENTITY_H, BaseFont.EMBEDDED)
            Dim RussianNormalFont As Font = New Font(bf, 12, Font.NORMAL)


            Dim fileName As String = ""
            Dim bytes As Byte()
            Dim printMode As String = "download"
            bytes = {}



            Dim document As New Document(PageSize.A4, 0.0F, 0.0F, 0.0F, 0.0F)
            document.SetMargins(0.0F, 0.0F, 10.0F, 0.0F)
            Dim documentWidth As Single = 550.0F
            Dim documentColumnWidth As Single = 225.0F


            Dim TitleFont As Font = FontFactory.GetFont("Arial", 12, Font.NORMAL, BaseColor.BLACK)
            Dim TitleFontBold As Font = FontFactory.GetFont("Arial", 12, Font.BOLD, BaseColor.BLACK)
            Dim TitleFontBig As Font = FontFactory.GetFont("Arial", 16, Font.NORMAL, BaseColor.BLACK)
            Dim TitleFontBigBold As Font = FontFactory.GetFont("Arial", 16, Font.BOLD, BaseColor.BLACK)
            Dim remainingPageSpace As Single
            Using memoryStream As New System.IO.MemoryStream()
                Dim writer As PdfWriter
                If printMode = "download" Then
                    writer = PdfWriter.GetInstance(document, memoryStream)
                Else
                    Dim path As String = System.Web.HttpContext.Current.Server.MapPath("~\SavedReports\") + fileName
                    writer = PdfWriter.GetInstance(document, New FileStream(path, FileMode.Create, FileAccess.ReadWrite))
                End If




                Dim table As PdfPTable = Nothing
                document.Open()
                'Header Table
                table = New PdfPTable(2)
                table.TotalWidth = documentWidth
                table.LockedWidth = True
                table.SetWidths(New Single() {0.6F, 0.6F})
                table.Complete = False
                table.SplitRows = False


                table.DefaultCell.Border = Rectangle.NO_BORDER

                Dim phrase As Phrase = Nothing
                Dim cell As PdfPCell = Nothing
                Dim tblHeader As PdfPTable = Nothing



                For i As Integer = 0 To Table1.Rows.Count - 1


                    writer.PageEvent = New clsHotelVoucherPageEvents(printMode)


                    Dim tblContact As PdfPTable = New PdfPTable(3)
                    tblContact.TotalWidth = documentColumnWidth
                    tblContact.LockedWidth = True
                    tblContact.SetWidths(New Single() {0.5F, 0.2, 0.7F})
                    tblContact.Complete = False
                    tblContact.SplitRows = False


                    If Table1.Rows(i)("Language").ToString = "RUS" Then
                        phrase = New Phrase()
                        '  phrase.Add(New Chunk("NAME", NormalFont))
                        phrase.Add(New Chunk("Имена гостей", RussianNormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Table1.Rows(i)("GuestName").ToString, NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.SetLeading(15, 0)
                        cell.PaddingLeft = -10
                        cell.PaddingBottom = 5.0F
                        cell.PaddingTop = -5.0F
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("Отель", RussianNormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Convert.ToString(Table1.Rows(i)("DropOff").ToString), NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -10
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("Гид, номер", RussianNormalFont)) 'Guide
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Table1.Rows(i)("Guide").ToString + " , " + Table1.Rows(i)("ContactNo").ToString, NormalFontBoldNew))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -10
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("Дата, время встречи", RussianNormalFont)) 'DATE & TIME OF MEETING
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Table1.Rows(i)("MeetingDate").ToString, NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -10
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("Рейс", RussianNormalFont)) 'FLIGHT
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Table1.Rows(i)("Flight").ToString, NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -10
                        tblContact.AddCell(cell)


                     

                        phrase = New Phrase()
                        phrase.Add(New Chunk("", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Convert.ToString(""), NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        tblContact.Complete = True
                        tblContact.SpacingBefore = 0
                        tblContact.SpacingAfter = 10
                        remainingPageSpace = writer.GetVerticalPosition(False) - document.BottomMargin
                        If remainingPageSpace < 72 Then document.NewPage()
                        table.AddCell(tblContact)
                        document.Add(table)

                    Else
                        phrase = New Phrase()
                        phrase.Add(New Chunk("NAME", NormalFontBold))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingTop = 7
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFontBold))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Table1.Rows(i)("GuestName").ToString, NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.SetLeading(15, 0)
                        ' cell.PaddingLeft = 10.0F
                        cell.PaddingTop = -5.0F
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -10
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("HOTEL/DROPOFF", NormalFontBold))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFontBold))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Table1.Rows(i)("DropOff").ToString, NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -10
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("GUIDE", NormalFontBold))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFontBold))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Table1.Rows(i)("Guide").ToString + " , " + Table1.Rows(i)("ContactNo").ToString, NormalFontBoldNew))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -10
                        tblContact.AddCell(cell)

                     


                        phrase = New Phrase()
                        phrase.Add(New Chunk("DATE & TIME OF MEETING", NormalFontBold))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Table1.Rows(i)("MeetingDate").ToString, NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -10
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("FLIGHT", NormalFontBold))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(":", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Table1.Rows(i)("Flight").ToString, NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -10
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -15
                        tblContact.AddCell(cell)


                        phrase = New Phrase()
                        phrase.Add(New Chunk("", NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        phrase = New Phrase()
                        phrase.Add(New Chunk(Convert.ToString(""), NormalFont))
                        cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                        cell.PaddingBottom = 5.0F
                        cell.PaddingLeft = -20
                        tblContact.AddCell(cell)

                        tblContact.Complete = True
                        tblContact.SpacingBefore = 0
                        tblContact.SpacingAfter = 10
                        remainingPageSpace = writer.GetVerticalPosition(False) - document.BottomMargin
                        If remainingPageSpace < 72 Then document.NewPage()


                        table.AddCell(tblContact)

                    End If

                    If i = Table1.Rows.Count - 1 Then
                        If Table1.Rows.Count Mod 2 = 1 Then


                            Dim tblContactBlank As PdfPTable = New PdfPTable(3)
                            tblContactBlank.TotalWidth = documentColumnWidth
                            tblContactBlank.LockedWidth = True
                            tblContactBlank.SetWidths(New Single() {0.6F, 0.1, 0.7F})
                            tblContactBlank.Complete = False
                            tblContactBlank.SplitRows = False

                            phrase = New Phrase()
                            phrase.Add(New Chunk("", NormalFont))
                            cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                            cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                            cell.PaddingBottom = 5.0F
                            tblContactBlank.AddCell(cell)




                            tblContactBlank.Complete = True
                            tblContact.SpacingBefore = 0
                            tblContact.SpacingAfter = 0
                            remainingPageSpace = writer.GetVerticalPosition(False) - document.BottomMargin
                            If remainingPageSpace < 72 Then document.NewPage()


                            table.AddCell(tblContactBlank)
                        End If
                    End If


                    document.Add(table)


                Next




                document.AddTitle("PrintLabel-")
                document.Close()
                If printMode = "download" Then
                    Dim pagingFont As Font = FontFactory.GetFont("Arial", 9, Font.NORMAL, BaseColor.GRAY)
                    Dim reader As New PdfReader(memoryStream.ToArray())
                    Using mStream As New MemoryStream()
                        Using stamper As New PdfStamper(reader, mStream)
                            Dim pages As Integer = reader.NumberOfPages
                            For i As Integer = 1 To pages
                                ColumnText.ShowTextAligned(stamper.GetUnderContent(i), Element.ALIGN_CENTER, New Phrase("Page " + i.ToString() + " of " + pages.ToString(), pagingFont), 300.0F, 10.0F, 0)
                            Next
                        End Using
                        bytes = mStream.ToArray()
                    End Using
                End If
            End Using


            fileName = "PrintLabel@" + "@" + DateTime.Now.ToString("ddMMyyyy@HHmmss") + ".pdf"
            Response.Clear()
            Response.AddHeader("Content-Disposition", "attachment; filename=" + fileName)
            Response.AddHeader("Content-Length", bytes.Length.ToString())
            Response.ContentType = "application/pdf"
            Response.Buffer = True
            Response.Cache.SetCacheability(HttpCacheability.NoCache)
            Response.BinaryWrite(bytes)
            Response.Flush()
            HttpContext.Current.ApplicationInstance.CompleteRequest()

        Catch ex As Exception

        End Try
    End Sub

#Region "Private Shared Function PhraseCell(phrase As Phrase, align As Integer, Cols As Integer, celBorder As Boolean, Optional celBottomBorder As String = ""None"") As PdfPCell"
    Private Shared Function PhraseCell(ByVal phrase As Phrase, ByVal align As Integer, ByVal Cols As Integer, ByVal celBorder As Boolean, Optional ByVal celBottomBorder As String = "None") As PdfPCell
        Dim cell As New PdfPCell(phrase)
        If Cols > 1 Then cell.Colspan = Cols
        If celBorder Then
            If celBottomBorder <> "None" Then
                If celBottomBorder = "No" Then
                    cell.Border = Rectangle.LEFT_BORDER Or Rectangle.RIGHT_BORDER
                    cell.BorderColor = BaseColor.BLACK
                Else
                    cell.Border = Rectangle.LEFT_BORDER Or Rectangle.RIGHT_BORDER Or Rectangle.TOP_BORDER
                    cell.BorderColor = BaseColor.BLACK
                End If
            Else
                cell.BorderColor = BaseColor.BLACK
            End If
        Else
            cell.Border = Rectangle.NO_BORDER
        End If
        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
        cell.HorizontalAlignment = align
        cell.PaddingBottom = 0.5F
        cell.PaddingTop = 0.0F
        Return cell
    End Function
#End Region



    Protected Sub gv_SearchResult_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles gv_SearchResult.RowDataBound

        If (e.Row.RowType = DataControlRowType.Header) Then
            CType(e.Row.FindControl("chkSelectAll"), CheckBox).Attributes.Add("onclick", ("javascript:SelectAll('" _
                            + (CType(e.Row.FindControl("chkSelectAll"), CheckBox).ClientID + "')")))
        End If

        '
        If (e.Row.RowType = DataControlRowType.DataRow) Then
            Dim lblRequestId As Label = CType(e.Row.FindControl("lblRequestId"), Label)
            Dim lblDiv_Code As Label = CType(e.Row.FindControl("lblDiv_Code"), Label)

            Dim rdblLanguage As RadioButtonList = CType(e.Row.FindControl("rdblLanguage"), RadioButtonList)
            If lblDiv_Code.Text = "01" Then
                rdblLanguage.SelectedValue = "RUS"
            Else
                rdblLanguage.SelectedValue = "EN"
            End If
        End If

    End Sub

    Protected Sub btnPlackCard_Click(sender As Object, e As System.EventArgs) Handles btnPlackCard.Click

        Try


            If gv_SearchResult.Rows.Count = 0 Then
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('No record found.' );", True)
                Exit Sub
            End If
            Dim strFlag As String = ""
            For Each row As GridViewRow In gv_SearchResult.Rows
                Dim chkSelectCtrl As CheckBox = DirectCast(row.FindControl("chkSelect"), CheckBox)
                If chkSelectCtrl.Checked = True Then
                    strFlag = "1"
                End If
            Next
            If strFlag = "" Then
                ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "", "alert('Please select atleast one item.' );", True)
                Exit Sub
            End If

  

            Dim Table1 As DataTable
            Table1 = New DataTable("TableName")

            Dim column1 As DataColumn = New DataColumn("GuestName")
            column1.DataType = System.Type.GetType("System.String")

            Dim column2 As DataColumn = New DataColumn("DropOff")
            column2.DataType = System.Type.GetType("System.String")

            Dim column3 As DataColumn = New DataColumn("Guide")
            column3.DataType = System.Type.GetType("System.String")

            Dim column4 As DataColumn = New DataColumn("ContactNo")
            column4.DataType = System.Type.GetType("System.String")

            Dim column5 As DataColumn = New DataColumn("MeetingDate")
            column5.DataType = System.Type.GetType("System.String")


            Dim column6 As DataColumn = New DataColumn("Flight")
            column6.DataType = System.Type.GetType("System.String")

            Dim column7 As DataColumn = New DataColumn("Language")
            column7.DataType = System.Type.GetType("System.String")

            Dim column8 As DataColumn = New DataColumn("FlightTime")
            column8.DataType = System.Type.GetType("System.String")

            Dim column9 As DataColumn = New DataColumn("TransferDate")
            column9.DataType = System.Type.GetType("System.String")

            Dim column10 As DataColumn = New DataColumn("TotalPax")
            column10.DataType = System.Type.GetType("System.String")

            Dim column11 As DataColumn = New DataColumn("DivCode")
            column11.DataType = System.Type.GetType("System.String")

            Dim column12 As DataColumn = New DataColumn("AgentName")
            column12.DataType = System.Type.GetType("System.String")

            Table1.Columns.Add(column1)
            Table1.Columns.Add(column2)
            Table1.Columns.Add(column3)
            Table1.Columns.Add(column4)
            Table1.Columns.Add(column5)
            Table1.Columns.Add(column6)
            Table1.Columns.Add(column7)

            Table1.Columns.Add(column8)
            Table1.Columns.Add(column9)
            Table1.Columns.Add(column10)
            Table1.Columns.Add(column11)
            Table1.Columns.Add(column12)




            For Each row As GridViewRow In gv_SearchResult.Rows
                Dim chkSelectCtrl As CheckBox = DirectCast(row.FindControl("chkSelect"), CheckBox)
                If chkSelectCtrl.Checked = True Then
                    Dim txtGuestName As TextBox = DirectCast(row.FindControl("txtGuestName"), TextBox)
                    Dim txtDropOff As TextBox = DirectCast(row.FindControl("txtDropOff"), TextBox)
                    Dim txtGuide As TextBox = DirectCast(row.FindControl("txtGuide"), TextBox)
                    Dim txtContactNo As TextBox = DirectCast(row.FindControl("txtContactNo"), TextBox)
                    Dim txtMeetingDate As TextBox = DirectCast(row.FindControl("txtMeetingDate"), TextBox)
                    Dim txtFlight As TextBox = DirectCast(row.FindControl("txtFlight"), TextBox)

                    Dim txtFlightTime As TextBox = DirectCast(row.FindControl("txtFlightTime"), TextBox)
                    Dim lblTransferDate As Label = DirectCast(row.FindControl("lblTransferDate"), Label)
                    Dim lbltotalPax As Label = DirectCast(row.FindControl("lbltotalPax"), Label)
                    Dim lblDiv_Code As Label = DirectCast(row.FindControl("lblDiv_Code"), Label)
                    Dim lblAgentName As Label = DirectCast(row.FindControl("lblAgentName"), Label)

                    Dim rdblLanguage As RadioButtonList = CType(row.FindControl("rdblLanguage"), RadioButtonList)
                    Dim dRow As DataRow
                    dRow = Table1.NewRow()

                    dRow("GuestName") = txtGuestName.Text
                    dRow("DropOff") = txtDropOff.Text
                    dRow("Guide") = txtGuide.Text

                    dRow("ContactNo") = txtContactNo.Text
                    dRow("MeetingDate") = txtMeetingDate.Text
                    dRow("Flight") = txtFlight.Text
                    dRow("Language") = rdblLanguage.SelectedValue

                    dRow("FlightTime") = txtFlightTime.Text
                    dRow("TransferDate") = lblTransferDate.Text
                    dRow("TotalPax") = lbltotalPax.Text
                    dRow("DivCode") = lblDiv_Code.Text
                    dRow("AgentName") = lblAgentName.Text
                    Table1.Rows.Add(dRow)

                End If
            Next


            Dim fontLoc As String = "c:\windows\fonts\arialuni.ttf"
            Dim bf As BaseFont = BaseFont.CreateFont(fontLoc, BaseFont.IDENTITY_H, BaseFont.EMBEDDED)
            Dim RussianNormalFont As Font = New Font(bf, 12, Font.NORMAL)


            Dim fileName As String = ""
            Dim bytes As Byte()
            Dim printMode As String = "download"
            bytes = {}



            Dim document As New Document(PageSize.A4.Rotate, 0.0F, 0.0F, 0.0F, 0.0F)
            document.SetMargins(0.0F, 0.0F, 10.0F, 0.0F)
            Dim documentWidth As Single = 750.0F

            Dim NormalFont As Font = FontFactory.GetFont("Georgia", 16, Font.BOLD, BaseColor.BLACK)
            Dim TitleFontBig As Font = FontFactory.GetFont("Georgia", 16, Font.NORMAL, BaseColor.BLACK)
            Dim TitleFontBigBold As Font = FontFactory.GetFont("Arial", 16, Font.BOLD, BaseColor.BLACK)

            Dim TitleFontGuestBold As Font = FontFactory.GetFont("Georgia", 65, Font.BOLD, BaseColor.BLACK)
            Dim TitleFontGuestBoldSmall As Font = FontFactory.GetFont("Georgia", 50, Font.BOLD, BaseColor.BLACK)
            Dim TitleFontHotelBold As Font = FontFactory.GetFont("Georgia", 35, Font.BOLD Or Font.UNDERLINE, BaseColor.BLACK)
            Dim TitleFontHotelBoldSmall_New As Font = FontFactory.GetFont("Georgia", 30, Font.BOLD Or Font.UNDERLINE, BaseColor.BLACK)
            Dim TitleFontHotelBoldSmall As Font = FontFactory.GetFont("Georgia", 25, Font.BOLD Or Font.UNDERLINE, BaseColor.BLACK)
            Dim TitleFontHotelBoldSmallAgent As Font = FontFactory.GetFont("Georgia", 20, Font.BOLD Or Font.UNDERLINE, BaseColor.BLACK)

            Dim remainingPageSpace As Single
            Using memoryStream As New System.IO.MemoryStream()
                Dim writer As PdfWriter
                If printMode = "download" Then
                    writer = PdfWriter.GetInstance(document, memoryStream)
                Else
                    Dim path As String = System.Web.HttpContext.Current.Server.MapPath("~\SavedReports\") + fileName
                    writer = PdfWriter.GetInstance(document, New FileStream(path, FileMode.Create, FileAccess.ReadWrite))
                End If




                Dim table As PdfPTable = Nothing
                document.Open()
                'Header Table
                table = New PdfPTable(1)
                table.TotalWidth = documentWidth
                table.LockedWidth = True
                table.SetWidths(New Single() {10.6F})
                table.Complete = False
                table.SplitRows = False


                table.DefaultCell.Border = Rectangle.NO_BORDER

                Dim phrase As Phrase = Nothing
                Dim cell As PdfPCell = Nothing
                Dim tblHeader As PdfPTable = Nothing



                For i As Integer = 0 To Table1.Rows.Count - 1


                    writer.PageEvent = New clsHotelVoucherPageEvents(printMode)


                    Dim tblContact As PdfPTable = New PdfPTable(1)
                    tblContact.TotalWidth = documentWidth
                    tblContact.LockedWidth = True
                    tblContact.SetWidths(New Single() {0.5F})
                    tblContact.Complete = False
                    tblContact.SplitRows = False



                    Dim strFlightTime As String = ""
                    If Table1.Rows(i)("Flight").ToString <> "" Then
                        If Table1.Rows(i)("Flight").ToString <> "" Then
                            strFlightTime = Table1.Rows(i)("Flight").ToString + " (" + Table1.Rows(i)("Flighttime").ToString + ") " + Table1.Rows(i)("TransferDate").ToString
                        Else
                            strFlightTime = Table1.Rows(i)("Flight").ToString + " " + Table1.Rows(i)("TransferDate").ToString
                        End If

                    Else
                        strFlightTime = Table1.Rows(i)("TransferDate").ToString
                    End If


                    phrase = New Phrase()
                    phrase.Add(New Chunk(strFlightTime, TitleFontBig))
                    cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT, 1, False)
                    cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                    cell.PaddingBottom = 5.0F
                    cell.PaddingLeft = 10
                    tblContact.AddCell(cell)


                    Dim strGuestName As String()

                    strGuestName = Table1.Rows(i)("GuestName").ToString().Split(",")

                    phrase = New Phrase()

                    'If strGuestName(0).Length > 20 Then
                    '    phrase.Add(New Chunk(strGuestName(0) & " X  " + Table1.Rows(i)("TotalPax").ToString(), TitleFontGuestBoldSmall))
                    'Else
                    '    phrase.Add(New Chunk(strGuestName(0) & " X  " + Table1.Rows(i)("TotalPax").ToString(), TitleFontGuestBold))
                    'End If
                    phrase.Add(New Chunk(strGuestName(0) & " x " + Table1.Rows(i)("TotalPax").ToString(), TitleFontGuestBold))

                    cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                    cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                    cell.SetLeading(70, 0)
                    ' cell.PaddingLeft = 10.0F
                    'If strGuestName(0).Length > 20 Then
                    '    cell.PaddingTop = 100.0F
                    'Else
                    '    cell.PaddingTop = 135.0F
                    'End If

                    cell.PaddingTop = 50.0F

                    cell.PaddingBottom = 5.0F
                    cell.PaddingLeft = -10
                    tblContact.AddCell(cell)

                    'phrase = New Phrase()
                    'phrase.Add(New Chunk("X  " + Table1.Rows(i)("TotalPax").ToString(), NormalFont))
                    'cell = PhraseCell(phrase, PdfPCell.ALIGN_RIGHT, 1, False)
                    'cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                    ''  cell.SetLeading(25, 0)
                    '' cell.PaddingLeft = 10.0F
                    'cell.PaddingTop = -10.0F
                    'cell.PaddingBottom = 5.0F
                    'cell.PaddingRight = 10
                    'tblContact.AddCell(cell)



                    phrase = New Phrase()
                    If strGuestName(0).Length > 20 Then
                        phrase.Add(New Chunk(Table1.Rows(i)("DropOff").ToString, TitleFontHotelBoldSmall_New))
                    Else
                        phrase.Add(New Chunk(Table1.Rows(i)("DropOff").ToString, TitleFontHotelBold))
                    End If


                    cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                    cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                    If Table1.Rows(i)("DropOff").ToString.Length > 30 Then

                        cell.SetLeading(40, 0)
                    Else

                        cell.SetLeading(50, 0)
                    End If




                    '  lblAgentName

                    cell.PaddingBottom = 5.0F
                    cell.PaddingLeft = 10
                    cell.PaddingTop = 15.0F
                    tblContact.AddCell(cell)


                    phrase = New Phrase()
                    phrase.Add(New Chunk(Table1.Rows(i)("AgentName").ToString(), TitleFontHotelBoldSmallAgent))
                    cell = PhraseCell(phrase, PdfPCell.ALIGN_CENTER, 1, False)
                    cell.VerticalAlignment = PdfPCell.ALIGN_TOP
                    cell.SetLeading(25, 0)
                    ' cell.PaddingLeft = 10.0F
                    cell.PaddingTop = 15.0F
                    cell.PaddingBottom = 5.0F
                    cell.PaddingRight = 10
                    tblContact.AddCell(cell)



                    'Company Name 
                    phrase = New Phrase()
                    cell.PaddingBottom = 10

                    If (Table1.Rows(i)("DivCode").ToString = "02") Then
                        cell = ImageCell("~/Images/RGT_Logo.png", 260.0F, PdfPCell.ALIGN_CENTER)

                    Else
                        cell = ImageCell("~/Images/RPT_Logo.png", 260.0F, PdfPCell.ALIGN_CENTER)
                    End If
                    tblContact.AddCell(cell)

                  



                    tblContact.Complete = True
                    tblContact.SpacingBefore = 0
                    tblContact.SpacingAfter = 10
                    remainingPageSpace = writer.GetVerticalPosition(False) - document.BottomMargin
                    If remainingPageSpace < 72 Then document.NewPage()


                    table.AddCell(tblContact)




                    document.Add(table)


                Next




                document.AddTitle("PlackCard")
                document.Close()
                If printMode = "download" Then
                    Dim pagingFont As Font = FontFactory.GetFont("Arial", 9, Font.NORMAL, BaseColor.GRAY)
                    Dim reader As New PdfReader(memoryStream.ToArray())
                    Using mStream As New MemoryStream()
                        Using stamper As New PdfStamper(reader, mStream)
                            Dim pages As Integer = reader.NumberOfPages
                            For i As Integer = 1 To pages
                                ColumnText.ShowTextAligned(stamper.GetUnderContent(i), Element.ALIGN_CENTER, New Phrase("", pagingFont), 300.0F, 10.0F, 0)
                            Next
                        End Using
                        bytes = mStream.ToArray()
                    End Using
                End If
            End Using


            fileName = "PlackCard@" + "@" + DateTime.Now.ToString("ddMMyyyy@HHmmss") + ".pdf"
            Response.Clear()
            Response.AddHeader("Content-Disposition", "attachment; filename=" + fileName)
            Response.AddHeader("Content-Length", bytes.Length.ToString())
            Response.ContentType = "application/pdf"
            Response.Buffer = True
            Response.Cache.SetCacheability(HttpCacheability.NoCache)
            Response.BinaryWrite(bytes)
            Response.Flush()
            HttpContext.Current.ApplicationInstance.CompleteRequest()

        Catch ex As Exception

        End Try
    End Sub
#Region "Private Shared Function ImageCell(path As String, scale As Single, align As Integer) As PdfPCell"
    Private Shared Function ImageCell(ByVal path As String, ByVal scale As Single, ByVal align As Integer) As PdfPCell
        Dim image As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(path))
        image.ScaleAbsolute(400, 100)
        Dim cell As New PdfPCell(image)
        cell.BorderColor = BaseColor.WHITE
        cell.VerticalAlignment = PdfPCell.ALIGN_TOP
        cell.HorizontalAlignment = align
        cell.PaddingBottom = 0.0F
        cell.PaddingTop = 50.0F
        Return cell
    End Function
#End Region
End Class
